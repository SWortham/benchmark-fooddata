var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});

// src/adapter.ts
var env = (c) => {
  const global = globalThis;
  if (c.runtime === "bun" || c.runtime === "node" || c.runtime === "edge-light" || c.runtime === "lagon") {
    return global?.process?.env;
  }
  if (c.runtime === "deno") {
    return Deno.env.toObject();
  }
  if (c.runtime === "fastly") {
    let env2 = {};
    try {
      const data = __require("fastly:env");
      env2 = data.env;
    } catch {
    }
    return env2;
  }
  if (c.runtime === "workerd") {
    return c.env;
  }
  return {};
};
export {
  env
};
