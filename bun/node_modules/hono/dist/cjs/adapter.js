"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var adapter_exports = {};
__export(adapter_exports, {
  env: () => env
});
module.exports = __toCommonJS(adapter_exports);
const env = (c) => {
  const global = globalThis;
  if (c.runtime === "bun" || c.runtime === "node" || c.runtime === "edge-light" || c.runtime === "lagon") {
    return global?.process?.env;
  }
  if (c.runtime === "deno") {
    return Deno.env.toObject();
  }
  if (c.runtime === "fastly") {
    let env2 = {};
    try {
      const data = require("fastly:env");
      env2 = data.env;
    } catch {
    }
    return env2;
  }
  if (c.runtime === "workerd") {
    return c.env;
  }
  return {};
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  env
});
