// src/adapter/aws-lambda/handler.ts
import crypto from "crypto";
globalThis.crypto = crypto;
var handle = (app) => {
  return async (event) => {
    const req = createRequest(event);
    const res = await app.fetch(req);
    const arrayBuffer = await res.arrayBuffer();
    const result = {
      statusCode: res.status,
      body: String.fromCharCode(...new Uint8Array(arrayBuffer)),
      headers: {},
      isBase64Encoded: false
    };
    res.headers.forEach((value, key) => {
      result.headers[key] = value;
    });
    return result;
  };
};
var createRequest = (event) => {
  const url = `https://${event.requestContext.domainName}${event.path}`;
  const headers = new Headers();
  for (const [k, v] of Object.entries(event.headers)) {
    if (v)
      headers.set(k, v);
  }
  const method = event.httpMethod;
  const requestInit = {
    headers,
    method
  };
  if (event.body) {
    requestInit.body = event.isBase64Encoded ? atob(event.body) : event.body;
  }
  return new Request(url, requestInit);
};
export {
  handle
};
