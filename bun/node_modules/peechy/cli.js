#!/usr/bin/env node
var Ht=Object.create;var te=Object.defineProperty;var Zt=Object.getOwnPropertyDescriptor;var Yt=Object.getOwnPropertyNames;var Xt=Object.getPrototypeOf,Qt=Object.prototype.hasOwnProperty;var ei=(s,n,e)=>n in s?te(s,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[n]=e;var E=(s,n)=>()=>(n||s((n={exports:{}}).exports,n),n.exports),ti=(s,n)=>{for(var e in n)te(s,e,{get:n[e],enumerable:!0})},Fe=(s,n,e,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of Yt(n))!Qt.call(s,i)&&i!==e&&te(s,i,{get:()=>n[i],enumerable:!(t=Zt(n,i))||t.enumerable});return s};var ve=(s,n,e)=>(e=s!=null?Ht(Xt(s)):{},Fe(n||!s||!s.__esModule?te(e,"default",{value:s,enumerable:!0}):e,s)),ii=s=>Fe(te({},"__esModule",{value:!0}),s);var _e=(s,n,e)=>(ei(s,typeof n!="symbol"?n+"":n,e),e);var x=E((nr,pe)=>{var lt,ut,ot,ft,pt,ht,ct,dt,mt,oe,Ne,yt,bt,gt,Z,wt,vt,_t,kt,St,At,Et,Ut,fe;(function(s){var n=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:{};typeof define=="function"&&define.amd?define("tslib",["exports"],function(t){s(e(n,e(t)))}):typeof pe=="object"&&typeof pe.exports=="object"?s(e(n,e(pe.exports))):s(e(n));function e(t,i){return t!==n&&(typeof Object.create=="function"?Object.defineProperty(t,"__esModule",{value:!0}):t.__esModule=!0),function(a,r){return t[a]=i?i(a,r):r}}})(function(s){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=i[a])};lt=function(t,i){if(typeof i!="function"&&i!==null)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");n(t,i);function a(){this.constructor=t}t.prototype=i===null?Object.create(i):(a.prototype=i.prototype,new a)},ut=Object.assign||function(t){for(var i,a=1,r=arguments.length;a<r;a++){i=arguments[a];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},ot=function(t,i){var a={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&i.indexOf(r)<0&&(a[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,r=Object.getOwnPropertySymbols(t);o<r.length;o++)i.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(t,r[o])&&(a[r[o]]=t[r[o]]);return a},ft=function(t,i,a,r){var o=arguments.length,l=o<3?i:r===null?r=Object.getOwnPropertyDescriptor(i,a):r,u;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")l=Reflect.decorate(t,i,a,r);else for(var p=t.length-1;p>=0;p--)(u=t[p])&&(l=(o<3?u(l):o>3?u(i,a,l):u(i,a))||l);return o>3&&l&&Object.defineProperty(i,a,l),l},pt=function(t,i){return function(a,r){i(a,r,t)}},ht=function(t,i){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,i)},ct=function(t,i,a,r){function o(l){return l instanceof a?l:new a(function(u){u(l)})}return new(a||(a=Promise))(function(l,u){function p(h){try{c(r.next(h))}catch(m){u(m)}}function f(h){try{c(r.throw(h))}catch(m){u(m)}}function c(h){h.done?l(h.value):o(h.value).then(p,f)}c((r=r.apply(t,i||[])).next())})},dt=function(t,i){var a={label:0,sent:function(){if(l[0]&1)throw l[1];return l[1]},trys:[],ops:[]},r,o,l,u;return u={next:p(0),throw:p(1),return:p(2)},typeof Symbol=="function"&&(u[Symbol.iterator]=function(){return this}),u;function p(c){return function(h){return f([c,h])}}function f(c){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,o&&(l=c[0]&2?o.return:c[0]?o.throw||((l=o.return)&&l.call(o),0):o.next)&&!(l=l.call(o,c[1])).done)return l;switch(o=0,l&&(c=[c[0]&2,l.value]),c[0]){case 0:case 1:l=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,o=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(l=a.trys,!(l=l.length>0&&l[l.length-1])&&(c[0]===6||c[0]===2)){a=0;continue}if(c[0]===3&&(!l||c[1]>l[0]&&c[1]<l[3])){a.label=c[1];break}if(c[0]===6&&a.label<l[1]){a.label=l[1],l=c;break}if(l&&a.label<l[2]){a.label=l[2],a.ops.push(c);break}l[2]&&a.ops.pop(),a.trys.pop();continue}c=i.call(t,a)}catch(h){c=[6,h],o=0}finally{r=l=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}},mt=function(t,i){for(var a in t)a!=="default"&&!Object.prototype.hasOwnProperty.call(i,a)&&fe(i,t,a)},fe=Object.create?function(t,i,a,r){r===void 0&&(r=a),Object.defineProperty(t,r,{enumerable:!0,get:function(){return i[a]}})}:function(t,i,a,r){r===void 0&&(r=a),t[r]=i[a]},oe=function(t){var i=typeof Symbol=="function"&&Symbol.iterator,a=i&&t[i],r=0;if(a)return a.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(i?"Object is not iterable.":"Symbol.iterator is not defined.")},Ne=function(t,i){var a=typeof Symbol=="function"&&t[Symbol.iterator];if(!a)return t;var r=a.call(t),o,l=[],u;try{for(;(i===void 0||i-- >0)&&!(o=r.next()).done;)l.push(o.value)}catch(p){u={error:p}}finally{try{o&&!o.done&&(a=r.return)&&a.call(r)}finally{if(u)throw u.error}}return l},yt=function(){for(var t=[],i=0;i<arguments.length;i++)t=t.concat(Ne(arguments[i]));return t},bt=function(){for(var t=0,i=0,a=arguments.length;i<a;i++)t+=arguments[i].length;for(var r=Array(t),o=0,i=0;i<a;i++)for(var l=arguments[i],u=0,p=l.length;u<p;u++,o++)r[o]=l[u];return r},gt=function(t,i,a){if(a||arguments.length===2)for(var r=0,o=i.length,l;r<o;r++)(l||!(r in i))&&(l||(l=Array.prototype.slice.call(i,0,r)),l[r]=i[r]);return t.concat(l||Array.prototype.slice.call(i))},Z=function(t){return this instanceof Z?(this.v=t,this):new Z(t)},wt=function(t,i,a){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=a.apply(t,i||[]),o,l=[];return o={},u("next"),u("throw"),u("return"),o[Symbol.asyncIterator]=function(){return this},o;function u(d){r[d]&&(o[d]=function(g){return new Promise(function(S,_){l.push([d,g,S,_])>1||p(d,g)})})}function p(d,g){try{f(r[d](g))}catch(S){m(l[0][3],S)}}function f(d){d.value instanceof Z?Promise.resolve(d.value.v).then(c,h):m(l[0][2],d)}function c(d){p("next",d)}function h(d){p("throw",d)}function m(d,g){d(g),l.shift(),l.length&&p(l[0][0],l[0][1])}},vt=function(t){var i,a;return i={},r("next"),r("throw",function(o){throw o}),r("return"),i[Symbol.iterator]=function(){return this},i;function r(o,l){i[o]=t[o]?function(u){return(a=!a)?{value:Z(t[o](u)),done:o==="return"}:l?l(u):u}:l}},_t=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=t[Symbol.asyncIterator],a;return i?i.call(t):(t=typeof oe=="function"?oe(t):t[Symbol.iterator](),a={},r("next"),r("throw"),r("return"),a[Symbol.asyncIterator]=function(){return this},a);function r(l){a[l]=t[l]&&function(u){return new Promise(function(p,f){u=t[l](u),o(p,f,u.done,u.value)})}}function o(l,u,p,f){Promise.resolve(f).then(function(c){l({value:c,done:p})},u)}},kt=function(t,i){return Object.defineProperty?Object.defineProperty(t,"raw",{value:i}):t.raw=i,t};var e=Object.create?function(t,i){Object.defineProperty(t,"default",{enumerable:!0,value:i})}:function(t,i){t.default=i};St=function(t){if(t&&t.__esModule)return t;var i={};if(t!=null)for(var a in t)a!=="default"&&Object.prototype.hasOwnProperty.call(t,a)&&fe(i,t,a);return e(i,t),i},At=function(t){return t&&t.__esModule?t:{default:t}},Et=function(t,i,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof i=="function"?t!==i||!r:!i.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:i.get(t)},Ut=function(t,i,a,r,o){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof i=="function"?t!==i||!o:!i.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?o.call(t,a):o?o.value=a:i.set(t,a),a},s("__extends",lt),s("__assign",ut),s("__rest",ot),s("__decorate",ft),s("__param",pt),s("__metadata",ht),s("__awaiter",ct),s("__generator",dt),s("__exportStar",mt),s("__createBinding",fe),s("__values",oe),s("__read",Ne),s("__spread",yt),s("__spreadArrays",bt),s("__spreadArray",gt),s("__await",Z),s("__asyncGenerator",wt),s("__asyncDelegator",vt),s("__asyncValues",_t),s("__makeTemplateObject",kt),s("__importStar",St),s("__importDefault",At),s("__classPrivateFieldGet",Et),s("__classPrivateFieldSet",Ut)})});var Tt=E(Y=>{"use strict";Object.defineProperty(Y,"__esModule",{value:!0});Y.lowerCase=Y.localeLowerCase=void 0;var Ci={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},az:{regexp:/\u0130/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i\u0307",J:"j\u0307",\u012E:"\u012F\u0307",\u00CC:"i\u0307\u0300",\u00CD:"i\u0307\u0301",\u0128:"i\u0307\u0303"}}};function Oi(s,n){var e=Ci[n.toLowerCase()];return je(e?s.replace(e.regexp,function(t){return e.map[t]}):s)}Y.localeLowerCase=Oi;function je(s){return s.toLowerCase()}Y.lowerCase=je});var K=E(he=>{"use strict";Object.defineProperty(he,"__esModule",{value:!0});he.noCase=void 0;var Di=Tt(),Vi=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],Pi=/[^A-Z0-9]+/gi;function Ri(s,n){n===void 0&&(n={});for(var e=n.splitRegexp,t=e===void 0?Vi:e,i=n.stripRegexp,a=i===void 0?Pi:i,r=n.transform,o=r===void 0?Di.lowerCase:r,l=n.delimiter,u=l===void 0?" ":l,p=$t($t(s,t,"$1\0$2"),a,"\0"),f=0,c=p.length;p.charAt(f)==="\0";)f++;for(;p.charAt(c-1)==="\0";)c--;return p.slice(f,c).split("\0").map(o).join(u)}he.noCase=Ri;function $t(s,n,e){return n instanceof RegExp?s.replace(n,e):n.reduce(function(t,i){return t.replace(i,e)},s)}});var Ce=E(F=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0});F.pascalCase=F.pascalCaseTransformMerge=F.pascalCaseTransform=void 0;var Li=x(),Fi=K();function xt(s,n){var e=s.charAt(0),t=s.substr(1).toLowerCase();return n>0&&e>="0"&&e<="9"?"_"+e+t:""+e.toUpperCase()+t}F.pascalCaseTransform=xt;function Gi(s){return s.charAt(0).toUpperCase()+s.slice(1).toLowerCase()}F.pascalCaseTransformMerge=Gi;function qi(s,n){return n===void 0&&(n={}),Fi.noCase(s,Li.__assign({delimiter:"",transform:xt},n))}F.pascalCase=qi});var Bt=E(G=>{"use strict";Object.defineProperty(G,"__esModule",{value:!0});G.camelCase=G.camelCaseTransformMerge=G.camelCaseTransform=void 0;var Wi=x(),Oe=Ce();function It(s,n){return n===0?s.toLowerCase():Oe.pascalCaseTransform(s,n)}G.camelCaseTransform=It;function zi(s,n){return n===0?s.toLowerCase():Oe.pascalCaseTransformMerge(s)}G.camelCaseTransformMerge=zi;function Ki(s,n){return n===void 0&&(n={}),Oe.pascalCase(s,Wi.__assign({transform:It},n))}G.camelCase=Ki});var De=E(ce=>{"use strict";Object.defineProperty(ce,"__esModule",{value:!0});ce.upperCaseFirst=void 0;function Ji(s){return s.charAt(0).toUpperCase()+s.substr(1)}ce.upperCaseFirst=Ji});var Ve=E(X=>{"use strict";Object.defineProperty(X,"__esModule",{value:!0});X.capitalCase=X.capitalCaseTransform=void 0;var Hi=x(),Zi=K(),Yi=De();function Mt(s){return Yi.upperCaseFirst(s.toLowerCase())}X.capitalCaseTransform=Mt;function Xi(s,n){return n===void 0&&(n={}),Zi.noCase(s,Hi.__assign({delimiter:" ",transform:Mt},n))}X.capitalCase=Xi});var Nt=E(Q=>{"use strict";Object.defineProperty(Q,"__esModule",{value:!0});Q.upperCase=Q.localeUpperCase=void 0;var Qi={tr:{regexp:/[\u0069]/g,map:{i:"\u0130"}},az:{regexp:/[\u0069]/g,map:{i:"\u0130"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i\u0307:"I",j\u0307:"J",\u012F\u0307:"\u012E",i\u0307\u0300:"\xCC",i\u0307\u0301:"\xCD",i\u0307\u0303:"\u0128"}}};function en(s,n){var e=Qi[n.toLowerCase()];return Pe(e?s.replace(e.regexp,function(t){return e.map[t]}):s)}Q.localeUpperCase=en;function Pe(s){return s.toUpperCase()}Q.upperCase=Pe});var jt=E(de=>{"use strict";Object.defineProperty(de,"__esModule",{value:!0});de.constantCase=void 0;var tn=x(),nn=K(),rn=Nt();function sn(s,n){return n===void 0&&(n={}),nn.noCase(s,tn.__assign({delimiter:"_",transform:rn.upperCase},n))}de.constantCase=sn});var ae=E(me=>{"use strict";Object.defineProperty(me,"__esModule",{value:!0});me.dotCase=void 0;var an=x(),ln=K();function un(s,n){return n===void 0&&(n={}),ln.noCase(s,an.__assign({delimiter:"."},n))}me.dotCase=un});var Ct=E(ye=>{"use strict";Object.defineProperty(ye,"__esModule",{value:!0});ye.headerCase=void 0;var on=x(),fn=Ve();function pn(s,n){return n===void 0&&(n={}),fn.capitalCase(s,on.__assign({delimiter:"-"},n))}ye.headerCase=pn});var Ot=E(be=>{"use strict";Object.defineProperty(be,"__esModule",{value:!0});be.paramCase=void 0;var hn=x(),cn=ae();function dn(s,n){return n===void 0&&(n={}),cn.dotCase(s,hn.__assign({delimiter:"-"},n))}be.paramCase=dn});var Dt=E(ge=>{"use strict";Object.defineProperty(ge,"__esModule",{value:!0});ge.pathCase=void 0;var mn=x(),yn=ae();function bn(s,n){return n===void 0&&(n={}),yn.dotCase(s,mn.__assign({delimiter:"/"},n))}ge.pathCase=bn});var Pt=E(ee=>{"use strict";Object.defineProperty(ee,"__esModule",{value:!0});ee.sentenceCase=ee.sentenceCaseTransform=void 0;var gn=x(),wn=K(),vn=De();function Vt(s,n){var e=s.toLowerCase();return n===0?vn.upperCaseFirst(e):e}ee.sentenceCaseTransform=Vt;function _n(s,n){return n===void 0&&(n={}),wn.noCase(s,gn.__assign({delimiter:" ",transform:Vt},n))}ee.sentenceCase=_n});var Rt=E(we=>{"use strict";Object.defineProperty(we,"__esModule",{value:!0});we.snakeCase=void 0;var kn=x(),Sn=ae();function An(s,n){return n===void 0&&(n={}),Sn.dotCase(s,kn.__assign({delimiter:"_"},n))}we.snakeCase=An});var Re=E($=>{"use strict";Object.defineProperty($,"__esModule",{value:!0});var M=x();M.__exportStar(Bt(),$);M.__exportStar(Ve(),$);M.__exportStar(jt(),$);M.__exportStar(ae(),$);M.__exportStar(Ct(),$);M.__exportStar(K(),$);M.__exportStar(Ot(),$);M.__exportStar(Ce(),$);M.__exportStar(Dt(),$);M.__exportStar(Pt(),$);M.__exportStar(Rt(),$)});var jn={};ti(jn,{main:()=>Kt});module.exports=ii(jn);var P=ve(require("fs"));var j=new Int32Array(1),le=new Float32Array(j.buffer),Ge=new Int16Array(j.buffer),qe=new Uint16Array(j.buffer),ke=new Uint32Array(j.buffer),k=new Uint8Array(j.buffer),We=new Int8Array(j.buffer),ie,Se,ni=typeof SharedArrayBuffer<"u"?SharedArrayBuffer:ArrayBuffer,ne=class{data;index;length;constructor(n,e=!1){if(n&&!(n instanceof Uint8Array))throw new Error("Must initialize a ByteBuffer with a Uint8Array");this.data=n||new Uint8Array(256),this.index=0,this.length=n?n.length:0}toUint8Array(){return this.data.subarray(0,this.length)}readByte(){if(this.index+1>this.data.length)throw new Error("Index out of bounds");return this.data[this.index++]}readAlphanumeric(){ie||(ie=new TextDecoder("utf-8"));let n=this.index,e=256,t=this.length-1;for(;this.index<t&&e>0;)e=this.data[this.index++];return String.fromCharCode(...this.data.subarray(n,this.index-1))}writeAlphanumeric(n){if(this.length+1>this.data.length)throw new Error("Index out of bounds");let e=this.length;this._growBy(n.length);let t=this.data,i=0,a=0;for(;i<n.length;)if(a=t[e++]=n.charCodeAt(i++),a>127)throw new Error(`Non-ascii character at char ${i-1} :${n}`);this.writeByte(0)}readFloat32(){if(this.index+4>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],k[1]=this.data[this.index++],k[2]=this.data[this.index++],k[3]=this.data[this.index++],le[0]}readByteArray(){let n=this.readVarUint(),e=this.index,t=e+n;if(t>this.data.length)throw new Error("Read array out of bounds");this.index=t;let i=new Uint8Array(new ni(n));return i.set(this.data.subarray(e,t)),i}readUint32ByteArray(){let n=this.readByteArray();return new Uint32Array(n.buffer,0,n.length/Uint32Array.BYTES_PER_ELEMENT)}readInt8ByteArray(){let n=this.readByteArray();return new Int8Array(n.buffer,0,n.length/Int8Array.BYTES_PER_ELEMENT)}readInt16ByteArray(){let n=this.readByteArray();return new Int16Array(n.buffer,0,n.length/Int16Array.BYTES_PER_ELEMENT)}readInt32ByteArray(){let n=this.readByteArray();return new Int32Array(n.buffer,0,n.length/Int32Array.BYTES_PER_ELEMENT)}readFloat32ByteArray(){let n=this.readByteArray();return new Float32Array(n.buffer,0,n.length/Float32Array.BYTES_PER_ELEMENT)}readVarFloat(){let n=this.index,e=this.data,t=e.length;if(n+1>t)throw new Error("Index out of bounds");let i=e[n];if(i===0)return this.index=n+1,0;if(n+4>t)throw new Error("Index out of bounds");let a=i|e[n+1]<<8|e[n+2]<<16|e[n+3]<<24;return this.index=n+4,a=a<<23|a>>>9,j[0]=a,le[0]}readUint32(){if(this.index+4>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],k[1]=this.data[this.index++],k[2]=this.data[this.index++],k[3]=this.data[this.index++],ke[0]}readUint16(){if(this.index+2>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],k[1]=this.data[this.index++],qe[0]}readVarUint(){return this.readUint32()}readInt32(){if(this.index+4>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],k[1]=this.data[this.index++],k[2]=this.data[this.index++],k[3]=this.data[this.index++],j[0]}readInt16(){if(this.index+2>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],k[1]=this.data[this.index++],Ge[0]}readInt8(){if(this.index+1>this.data.length)throw new Error("Index out of bounds");return k[0]=this.data[this.index++],We[0]}readVarInt(){return this.readInt32()}readString(){let n=this.readVarUint(),e=this.index;return this.index+=n,ie||(ie=new TextDecoder("utf8")),ie.decode(this.data.subarray(e,this.index))}_growBy(n){if(this.length+n>this.data.length){let e=new Uint8Array(Math.imul(this.length+n,ne.WIGGLE_ROOM)<<1);e.set(this.data),this.data=e}this.length+=n}writeByte(n){let e=this.length;this._growBy(1),this.data[e]=n}writeByteArray(n){this.writeVarUint(n.length);let e=this.length;this._growBy(n.length),this.data.set(n,e)}writeUint16ByteArray(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeUint32ByteArray(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeInt8ByteArray(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeInt16ByteArray(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeInt32ByteArray(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeFloat32Array(n){this.writeByteArray(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}writeVarFloat(n){let e=this.length;le[0]=n;let t=j[0];if(t=t>>>23|t<<9,(t&255)===0){this.writeByte(0);return}this._growBy(4);let i=this.data;i[e]=t,i[e+1]=t>>8,i[e+2]=t>>16,i[e+3]=t>>24}writeFloat32(n){let e=this.length;this._growBy(4),le[0]=n,this.data.set(k,e)}writeVarUint(n){this.writeUint32(n)}writeUint16(n){let e=this.length;this._growBy(2),qe[0]=n,this.data[e++]=k[0],this.data[e++]=k[1]}writeUint32(n){let e=this.length;this._growBy(4),ke[0]=n,this.data.set(k,e)}writeVarInt(n){this.writeInt32(n)}writeInt8(n){let e=this.length;this._growBy(1),We[0]=n,this.data[e++]=k[0]}writeInt16(n){let e=this.length;this._growBy(2),Ge[0]=n,this.data[e++]=k[0],this.data[e++]=k[1]}writeInt32(n){let e=this.length;this._growBy(4),j[0]=n,this.data.set(k,e)}writeLowPrecisionFloat(n){this.writeVarInt(Math.round(ne.LOW_PRECISION_VALUE*n))}readLowPrecisionFloat(){return this.readVarInt()/ne.LOW_PRECISION_VALUE}writeString(n){var e=this.length;this.writeVarUint(n.length),Se||(Se=new TextEncoder);let t=this.length;this._growBy(n.length*2+5);let i=Se.encodeInto(n,this.data.subarray(t));this.length=t+i.written,i.written!==n.length&&(ke[0]=i.written,this.data[e++]=k[0],this.data[e++]=k[1],this.data[e++]=k[2],this.data[e++]=k[3])}},T=ne;_e(T,"WIGGLE_ROOM",1),_e(T,"LOW_PRECISION_VALUE",10**3);function y(s){return JSON.stringify(s)}function w(s,n,e){var t=new Error(s);throw t.line=n,t.column=e,t}var ri=["bool","byte","float","int","uint8","uint16","uint32","int8","int16","lowp","int32","float32","string","uint","discriminator","alphanumeric"],si={bool:1,byte:1,float:1,int:1,uint8:1,uint16:1,uint32:1,int8:1,int16:1,int32:1,float32:1,string:1,uint:1,discriminator:1,alphanumeric:1},ai=["ByteBuffer","package","Allocator"],li=/((?:-|\b)\d+\b|[=\:;{}]|\[\]|\[deprecated\]|\[!\]|\b[A-Za-z_][A-Za-z0-9_]*\b|"|-|\&|\||\/\/.*|\s+)/g,B=/^[A-Za-z_][A-Za-z0-9_]*$/;var ui=/^\/\/.*|\s+$/,Ae=/^=$/,oi=/^$/,J=/^;$/,fi=/^-?\d+$/,Ee=/^\{$/,Ue=/^\}$/,pi=/^\[\]$/,hi=/^enum$/,ci=/^smol$/,ze=/^"$/,di=/^from$/,mi=/^:$/,yi=/^package$/,bi=/^pick$/,gi=/^entity$/,wi=/^struct$/,vi=/^alias$/,_i=/^union$/,ki=/^message$/,Si=/^\[deprecated\]$/,Ai=/^\|$/,Ei=/^&$/,Ui=/^\[!\]$/;function Ti(s){let n=s.split(li),e=[],t=0,i=0;for(let a=0;a<n.length;a++){let r=n[a];a&1?ui.test(r)||e.push({text:r,line:i+1,column:t+1}):r!==""&&w("Syntax error "+y(r),i+1,t+1);let o=r.split(`
`);o.length>1&&(t=0),i+=o.length-1,t+=o[o.length-1].length}return e.push({text:"",line:i,column:t}),e}function $i(s){function n(){return s[o]}function e(f){return f.test(n().text)?(o++,!0):!1}function t(f,c){if(!e(f)){let h=n();w("Expected "+c+" but found "+y(h.text),h.line,h.column)}}function i(){let f=n();w("Unexpected token "+y(f.text),f.line,f.column)}let a=[],r=null,o=0,l={};e(yi)&&(r=n().text,t(B,"identifier"),t(J,'";"'));let u;for(;o<s.length&&!e(oi);){let f=[],c,h;e(hi)?h="ENUM":e(ci)?h="SMOL":e(bi)?h="PICK":e(wi)?h="STRUCT":e(ki)?h="MESSAGE":e(gi)?h="ENTITY":e(_i)?h="UNION":e(vi)?h="ALIAS":i();let m=n();if(t(B,"identifier"),h==="PICK"){t(mi,'":"');let d=n();t(B,"identifier"),t(Ee,'"{"');let g=[];for(l[m.text]={to:m,fieldNames:g,from:d};!e(Ue);)d=n(),t(B,"identifier"),g.includes(d.text)&&w("Fields must be unique",d.line,d.column),g.push(d.text),t(J,";");continue}else if(h==="UNION"){t(Ae,'"="');let d=n();for(t(B,"identifier"),f.push({name:d.text,line:d.line,column:d.column,type:d.text,isArray:!1,isRequired:!0,isDeprecated:!1,value:f.length+1});e(Ai);)d=n(),t(B,"identifier"),f.push({name:d.text,line:d.line,column:d.column,type:d.text,isArray:!1,isDeprecated:!1,isRequired:!0,value:f.length+1});e(Ee)?(d=n(),t(B,"discriminator name"),f.unshift({type:"discriminator",name:d.text,line:d.line,column:d.column,isArray:!1,isDeprecated:!1,isRequired:!0,value:0}),t(J,";"),t(Ue,"}")):t(J,'";"')}else if(h==="ALIAS"){t(Ae,"=");let d=n();t(B,"identifier"),f.push({type:d.text,name:d.text,line:d.line,column:d.column,isArray:!1,isDeprecated:!1,isRequired:!0,value:1}),t(J,";")}else{if(h==="STRUCT")for(;e(Ei);){let d=n();t(B,"discriminator name"),c?c.push(d.text):c=[d.text]}if(e(di))for(t(ze,'"'),u="";!e(ze);)u+=n().text,o++;for(t(Ee,'"{"');!e(Ue);){let d=null,g=!1,S=!1;h!=="ENUM"&&h!=="SMOL"&&(d=n().text,t(B,"identifier"),g=e(pi));let _=n();t(B,"identifier");let v=null,N=h==="STRUCT";h!=="STRUCT"&&(t(Ae,'"="'),v=n(),t(fi,"integer"),e(Ui)&&(N=!0),(+v.text|0)+""!==v.text&&w("Invalid integer "+y(v.text),v.line,v.column));let U=n();e(Si)&&(h!=="MESSAGE"&&w("Cannot deprecate this field",U.line,U.column),S=!0),t(J,'";"'),f.push({name:_.text,line:_.line,column:_.column,type:d,isArray:g,isDeprecated:S,isRequired:N,value:v!==null?+v.text|0:f.length+1})}}a.push({name:m.text,line:m.line,column:m.column,kind:h,fields:f,extensions:c,serializerPath:u&&u.trim().length>0?u:void 0}),u=""}for(let f of a)if(f.extensions)for(let c of f.extensions){let h=f;for(let d=0;d<a.length&&(h=a[d],c!==h.name);d++);(h.name!==c||h.kind!=="STRUCT")&&w(`Expected ${h.name} to to be a struct`,f.line,f.column);let m=f.fields.length;for(let d of h.fields)f.fields.push({...d,value:d.value+m})}let p=!1;for(let f in l){let c=l[f],h=c.from,m=a[0];for(let S=0;S<a.length;S++)if(m=a[S],m.name===h.text){p=!0;break}p||w("Expected type for part to exist",h.line,h.column),p=!1;let d=new Array(c.fieldNames.length),g=m.fields[0];for(let S=0;S<d.length;S++){let _=c.fieldNames[S];p=!1,g=m.fields[0];for(let v=0;v<m.fields.length;v++)m.fields[v].name===_&&(g=m.fields[v],p=!0);p||w(`Expected field ${_} to exist in ${m.name}`,h.line,h.column),d[S]={name:g.name,line:g.line,column:g.column,type:g.type,isRequired:!0,isArray:g.isArray,isDeprecated:g.isDeprecated,value:S+1}}a.push({name:c.to.text,line:h.line,column:h.column,kind:"STRUCT",fields:d})}return{package:r,definitions:a}}function xi(s){let n=ri.slice(),e={};for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a];n.indexOf(r.name)!==-1&&w("The type "+y(r.name)+" is defined twice",r.line,r.column),ai.indexOf(r.name)!==-1&&w("The type name "+y(r.name)+" is reserved",r.line,r.column),n.push(r.name),e[r.name]=r}for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a],o=r.fields;if(r.kind==="ENUM"||r.kind==="SMOL"||o.length===0)continue;if(r.kind==="UNION"){let u={};for(let p=0;p<o.length;p++){let f=o[p];u[f.name]&&w("The type "+y(f.type)+" can only appear in  "+y(r.name)+" once.",f.line,f.column),u[f.name]=1,n.indexOf(f.type)===-1&&w("The type "+y(f.type)+" is not defined for union "+y(r.name),f.line,f.column)}}else if(r.kind==="ALIAS"){let u=r.fields[0];u||w("Expected alias name",r.line,r.column),e[u.name]||si[u.name]||w("Expected type used in alias to exist.",r.line,r.column)}else for(let u=0;u<o.length;u++){let p=o[u];n.indexOf(p.type)===-1&&w("The type "+y(p.type)+" is not defined for field "+y(p.name),p.line,p.column),p.type==="discriminator"&&w("discriminator is only available inside of unions.",p.line,p.column)}let l=[];for(let u=0;u<o.length;u++){let p=o[u];l.indexOf(p.value)!==-1&&w("The id for field "+y(p.name)+" is used twice",p.line,p.column),p.value<=0&&p.type!=="discriminator"&&w("The id for field "+y(p.name)+" must be positive",p.line,p.column),p.value>o.length&&w("The id for field "+y(p.name)+" cannot be larger than "+o.length,p.line,p.column),l.push(p.value)}}let t={},i=a=>{let r=e[a];if(r&&r.kind==="STRUCT"&&(t[a]===1&&w("Recursive nesting of "+y(a)+" is not allowed",r.line,r.column),t[a]!==2&&r)){t[a]=1;let o=r.fields;for(let l=0;l<o.length;l++){let u=o[l];u.isArray||i(u.type)}t[a]=2}return!0};for(let a=0;a<s.definitions.length;a++)i(s.definitions[a].name)}function L(s){let n=$i(Ti(s));return xi(n),n}function Te(s,n){return!n[s]||!n[s].fields.length?!1:n[s].fields[0].type==="discriminator"}function Ii(s,n,e,t=!1,i){let a=[],r="  ";if(n.kind==="UNION"){let o=Te(n.name,e);if(o?a.push(`function ${s}(bb) {`):a.push(`function ${s}(bb, type = 0) {`),a.push(""),o){a.push("  switch (bb.readByte()) {"),r="      ";for(let l=1;l<n.fields.length;l++){let u=n.fields[l];a.push(`    case ${u.value}:`,r+"var result = "+("decode"+u.name)+"(bb);",r+`result[${y(n.fields[0].name)}] = ${u.value};`,r+"return result;")}}else{a.push("  switch (type) {"),r="      ";for(let l=0;l<n.fields.length;l++){let u=n.fields[l];a.push(`    case ${u.value}:`,r+`return ${"decode"+u.name}(bb)`)}}}else{a.push(`function ${s}(bb) {`),t?a.push("  var result = Allocator["+y(n.name)+"].alloc();"):a.push("  var result = {};"),a.push(""),n.kind==="MESSAGE"&&(a.push("  while (true) {"),a.push("    switch (bb.readByte()) {"),a.push("    case 0:"),a.push("      return result;"),a.push(""),r="      ");for(let o=0;o<n.fields.length;o++){let l=n.fields[o],u,p=l.type;switch(i[p]&&(p=i[p]),p){case"bool":{u="!!bb.readByte()";break}case"uint8":case"byte":{u="bb.readByte()";break}case"int16":{u="bb.readInt16()";break}case"alphanumeric":{u="bb.readAlphanumeric()";break}case"int8":{u="bb.readInt8()";break}case"int32":{u="bb.readInt32()";break}case"int":{u="bb.readVarInt()";break}case"uint16":{u="bb.readUint16()";break}case"uint32":{u="bb.readUint32()";break}case"lowp":{u="bb.readLowPrecisionFloat()";break}case"uint":{u="bb.readVarUint()";break}case"float":{u="bb.readVarFloat()";break}case"float32":{u="bb.readFloat32()";break}case"string":{u="bb.readString()";break}default:{let f=e[p];f?f.kind==="ENUM"?u=f.name+"[bb.readVarUint()]":f.kind==="SMOL"?u=f.name+"[bb.readByte()]":u="decode"+f.name+"(bb)":w("Invalid type "+y(p)+" for field "+y(l.name),l.line,l.column)}}if(n.kind==="MESSAGE"&&a.push("    case "+l.value+":"),l.isArray)if(l.isDeprecated)p==="byte"?a.push(r+"bb.readByteArray();"):(a.push(r+"var length = bb.readVarUint();"),a.push(r+"while (length-- > 0) "+u+";"));else switch(p){case"byte":{a.push(r+"result["+y(l.name)+"] = bb.readByteArray();");break}case"uint16":{a.push(r+"result["+y(l.name)+"] = bb.readUint16ByteArray();");break}case"uint32":{a.push(r+"result["+y(l.name)+"] = bb.readUint32ByteArray();");break}case"int8":{a.push(r+"result["+y(l.name)+"] = bb.readInt8ByteArray();");break}case"int16":{a.push(r+"result["+y(l.name)+"] = bb.readInt16ByteArray();");break}case"int32":{a.push(r+"result["+y(l.name)+"] = bb.readInt32ByteArray();");break}case"float32":{a.push(r+"result["+y(l.name)+"] = bb.readFloat32ByteArray();");break}default:{a.push(r+"var length = bb.readVarUint();"),a.push(r+"var values = result["+y(l.name)+"] = Array(length);"),a.push(r+"for (var i = 0; i < length; i++) values[i] = "+u+";");break}}else if(p&&Te(p,e))a.push(r+"result["+y(l.name)+`] = ${"decode"+p}(bb);`);else if(p&&e[p]&&e[p].kind==="UNION"){let f=y(l.name+"Type");a.push(r+"result["+f+"] = bb.readVarUint();",r+"result["+y(l.name)+`] = ${"decode"+p}(bb, result[${f}]);`)}else l.isDeprecated?a.push(r+u+";"):a.push(r+"result["+y(l.name)+"] = "+u+";");n.kind==="MESSAGE"&&(a.push("      break;"),a.push(""))}}return n.kind==="MESSAGE"?(a.push("    default:"),a.push('      throw new Error("Attempted to parse invalid message");'),a.push("    }"),a.push("  }")):n.kind==="UNION"?(a.push("    default:"),a.push('      throw new Error("Attempted to parse invalid union");'),a.push("  }")):a.push("  return result;"),a.push("}"),a.join(`
`)}function Bi(s,n,e,t){let i=[];if(n.kind==="UNION"){let a=n.fields[0],r=a.type==="discriminator";i.push(`function ${s}(message, bb, type = 0) {`),r?(i.push(`  type = type ? type : ${n.name}[message[${y(a.name)}]];`),i.push(`  if (!type) throw new Error('Expected message[${y(a.name)}] to be one of ' + JSON.stringify(${n.name}) + ' ');`)):i.push(`  if (!type) throw new Error('Expected type to be one of ' + JSON.stringify(${n.name}, null, 2) + ' ');`),i.push(""),i.push("  bb.writeByte(type);"),i.push(""),i.push("  switch (type) {");for(let o=r?1:0;o<n.fields.length;o++){let l=n.fields[o],u;l.isDeprecated||(i.push(`    case ${l.value}: {`),i.push(`      ${"encode"+l.name}(message, bb)`),i.push("      break;"),i.push("    }"))}return i.push("    default: {"),i.push(`      throw new Error('Expected message[${y(a.name)}] to be one of ' + JSON.stringify(${n.name}) + ' ');`),i.push("    }"),i.push("  }"),i.push(""),i.push("}"),i.join(`
`)}else i.push(`function ${s}(message, bb) {`);for(let a=0;a<n.fields.length;a++){let r=n.fields[a],o;if(r.isDeprecated)continue;let l=r.type;switch(t[l]&&(l=t[l]),l){case"bool":{o="bb.writeByte(value);";break}case"byte":{o="bb.writeByte(value);";break}case"alphanumeric":{o="bb.writeAlphanumeric(value);";break}case"int":{o="bb.writeVarInt(value);";break}case"int8":{o="bb.writeInt8(value);";break}case"int16":{o="bb.writeInt16(value);";break}case"int32":{o="bb.writeInt32(value);";break}case"uint":{o="bb.writeVarUint(value);";break}case"lowp":{o="bb.writeLowPrecisionFloat(value);";break}case"uint8":{o="bb.writeByte(value);";break}case"uint16":{o="bb.writeUint16(value);";break}case"uint32":{o="bb.writeUint32(value);";break}case"float":{o="bb.writeVarFloat(value);";break}case"float32":{o="bb.writeFloat32(value);";break}case"string":{o="bb.writeString(value);";break}case"discriminator":{o="bb.writeVarUint(type);";break}default:{let u=e[l];if(u)u.kind==="ENUM"?o="var encoded = "+u.name+`[value];
if (encoded === void 0) throw new Error("Invalid value " + JSON.stringify(value) + `+y(" for enum "+y(u.name))+`);
bb.writeVarUint(encoded);`:u.kind==="SMOL"?o="var encoded = "+u.name+`[value];
if (encoded === void 0) throw new Error("Invalid value " + JSON.stringify(value) + `+y(" for enum "+y(u.name))+`);
bb.writeByte(encoded);`:u.kind==="UNION"&&Te(u.name,e)?o="encode"+u.name+"(value, bb);":u.kind==="UNION"?(o="var encoded = "+u.name+`[message[${y(r.name+"Type")}]];
    if (encoded === void 0) throw new Error('Expected ${y(r.name+"Type")} to be one of ' + JSON.stringify(${u.name},null,2) + ' for enum ${y(u.name)}');`,o+="encode"+u.name+"(value, bb, encoded);"):o="encode"+u.name+"(value, bb);";else throw new Error("Invalid type "+y(l)+" for field "+y(r.name))}}if(i.push(""),l==="discriminator"?w("Unexpected discriminator",r.line,r.column):(i.push("  var value = message["+y(r.name)+"];"),i.push("  if (value != null) {")),n.kind==="MESSAGE"&&i.push("    bb.writeByte("+r.value+");"),r.isArray){let u="   ";switch(l){case"byte":{i.push(u+"bb.writeByteArray(value);");break}case"uint16":{i.push(u+"bb.writeUint16ByteArray(value);");break}case"uint32":{i.push(u+"bb.writeUint32ByteArray(value);");break}case"int8":{i.push(u+"bb.writeInt8ByteArray(value);");break}case"int16":{i.push(u+"bb.writeInt16ByteArray(value);");break}case"int32":{i.push(u+"bb.writeInt32ByteArray(value);");break}case"float32":{i.push(u+"bb.writeFloat32ByteArray(value);");break}default:i.push("    var values = value, n = values.length;"),i.push("    bb.writeVarUint(n);"),i.push("    for (var i = 0; i < n; i++) {"),i.push("      value = values[i];"),i.push("      "+o),i.push("    }")}}else i.push("    "+o);n.kind==="STRUCT"&&(i.push("  } else {"),i.push("    throw new Error("+y("Missing required field "+y(r.name))+");")),i.push("  }")}return n.kind==="MESSAGE"&&i.push("  bb.writeByte(0);"),i.push(""),i.push("}"),i.join(`
`)}function $e(s,n=!1,e=!1){var u,p;let t={},i={},a=s.package,r=[],o=[],l=[];n?a="exports":a!==null?r.push("var "+a+" = exports || "+a+" || {}, exports;"):(r.push("var exports = exports || {};"),a="exports");for(let f=0;f<s.definitions.length;f++){let c=s.definitions[f];t[c.name]=c,c.kind==="ALIAS"&&(i[c.name]=c.fields[0].name),n&&((u=c.serializerPath)==null?void 0:u.length)&&l.push(`import {encode${c.name}, decode${c.name}} from "${c.serializerPath}";`)}for(let f=0;f<s.definitions.length;f++){let c=s.definitions[f];if(c.kind!=="ALIAS")switch(c.kind){case"SMOL":case"ENUM":{let h={},m={};for(let d=0;d<c.fields.length;d++){let g=c.fields[d];h[g.name]=g.value,h[g.value]=g.value,m[g.name]=g.name,m[g.value]=g.name}o.push(c.name,c.name+"Keys"),r.push("const "+c.name+" = "+JSON.stringify(h,null,2)+";"),r.push("const "+c.name+"Keys = "+JSON.stringify(m,null,2)+";");break}case"UNION":{let h={},m={},d=new Array(c.fields.length);d.fill("() => null");for(let S=0;S<c.fields.length;S++){let _=c.fields[S],v=_.type;_.value>0&&(i[_.name]&&(_.name=i[_.name]),h[_.name]=_.value,h[_.value]=_.value,m[_.name]=_.name,m[_.value]=_.name,d[_.value]="encode"+v)}o.push(c.name),r.push("const "+c.name+" = "+JSON.stringify(h,null,2)+";"),r.push("const "+c.name+"Keys = "+JSON.stringify(m,null,2)+";"),o.push(`${c.name}Keys`),r.push("const "+c.name+"Type = "+c.name+";"),o.push(c.name+"Type");let g=d.join(" , ");r.push("const encode"+c.name+"ByType = (function() { return ["+g+"]; })()")}case"STRUCT":case"MESSAGE":{o.push("decode"+c.name,"encode"+c.name),(!n||!((p=c.serializerPath)!=null&&p.length))&&(r.push(""),r.push(Ii("decode"+c.name,c,t,e,i)),r.push(""),r.push(Bi("encode"+c.name,c,t,i)));break}default:{w("Invalid definition kind "+y(c.kind),c.line,c.column);break}}}if(r.push(""),n){for(let f of l)r.unshift(f);for(let f of o)r.push(`export { ${f} }`)}else for(let f of o)r.push(`exports[${y(f)}] = ${f};`);return r.join(`
`)}function xe(s,n=!1,e){let t=e?{Allocator:e,ByteBuffer:T}:{ByteBuffer:T};typeof s=="string"&&(s=L(s));let i=$e(s,n,!!e);return n?(e&&(i=`import * as Allocator from "${e}";

${i}`),i):(new Function("exports",i)(t),t)}var Mi="peechy";function Ke(s){var n="",e=[`import type {ByteBuffer} from "${Mi}/bb";
`];s.package!==null&&(n+="  "),e.push("type byte = number;"),e.push("type float = number;"),e.push("type int = number;"),e.push("type alphanumeric = string;"),e.push("type uint = number;"),e.push("type int8 = number;"),e.push("type uint8 = number;"),e.push("type lowp = number;"),e.push("type int16 = number;"),e.push("type int32 = number;"),e.push("type float32 = number;"),e.push("type uint16 = number;"),e.push("type uint32 = number;");for(var t={},i={},a=0;a<s.definitions.length;a++){var r=s.definitions[a];if(r.kind==="UNION"){t[r.name]=a,e.push(n+"export const enum "+r.name+"Type {");let p=r.fields[0];for(var o=0;o<r.fields.length;){let f=r.fields[o];if(p.type==="discriminator"){if(o===0){o++;continue}i[f.name]?i[f.type][p.name]=r.name+"Type."+f.name:i[f.type]={[p.name]:r.name+"Type."+f.name}}e.push(n+n+""+f.name+" = "+f.value+(o<r.fields.length-1?",":"")),o++}e.push(n+"}"),e.push(n+"export const "+r.name+"Keys: {");for(var o=0;o<r.fields.length;){let c=r.fields[o];if(p.type==="discriminator"&&o===0){o++;continue}e.push(n+n+""+c.value+': "'+c.name+'",',n+n+""+c.name+': "'+c.name+'"'+(o<r.fields.length-1?",":"")),o++}e.push(n+"}")}else if(r.kind==="ENUM"||r.kind==="SMOL")if(!r.fields.length)e.push(n+"export type "+r.name+" = any;");else{e.push(n+"export const enum "+r.name+" {");for(var o=0;o<r.fields.length;o++)e.push(n+n+""+r.fields[o].name+" = "+r.fields[o].value+(o<r.fields.length-1?",":""));e.push(n+"}"),e.push(n+"export const "+r.name+"Keys: {");for(var o=0;o<r.fields.length;o++)e.push(n+n+""+r.fields[o].value+`: "${r.fields[o].name}",`,n+n+""+r.fields[o].name+`: "${r.fields[o].name}"`+(o<r.fields.length-1?",":""));e.push(n+"}")}else r.kind==="ALIAS"&&e.push(n+"export type "+r.name+" = "+r.fields[0].name+";")}for(var a=0;a<s.definitions.length;a++){var r=s.definitions[a];if(r.kind==="ALIAS")continue;let c={},h=0;for(var o=0;o<r.fields.length;o++){var l=r.fields[o];l.type&&t[l.type]&&(!i[r.name]||!i[r.name][l.name])&&(c[l.type]=o,h++)}if(r.kind==="STRUCT"||r.kind==="MESSAGE"||r.kind==="UNION"){let m;r.kind==="UNION"?m=n+"export type "+r.name:h?m=n+"interface Abstract"+r.name:m=n+"export interface "+r.name;let d=i[r.name];if(d){let S=0,_=[];for(let v in d)_.push("U"+S+++` extends (${d[v]} | undefined) = undefined`);m+="<"+_.join(" , ")+">",r.kind==="UNION"&&(m+=" ="),m+=" {",e.push(m),S=0;for(let v in d)e.push(n+n+`${v}: U${S++};`);r.kind==="UNION"&&e.push("  }")}else r.kind!=="UNION"?(m+=" {",e.push(m)):(m+=" = ",e.push(m));let g=!0;for(var o=0;o<r.fields.length;o++){var l=r.fields[o],u;if(!l.isDeprecated){switch(l.type){case"bool":u="boolean";break;case"byte":case"float":case"int":case"uint":case"int8":case"int16":case"int32":case"float32":case"uint16":case"uint32":u=l.type;break;case"string":{u="string";break}default:u=l.type;break}l.type==="byte"&&l.isArray?u="Uint8Array":l.type==="int8"&&l.isArray?u="Int8Array":l.type==="int16"&&l.isArray?u="Int16Array":l.type==="int32"&&l.isArray?u="Int32Array":l.type==="float32"&&l.isArray?u="Float32Array":l.type==="uint16"&&l.isArray?u="Uint16Array":l.type==="uint32"&&l.isArray?u="Uint32Array":l.isArray&&(u+="[]"),r.kind==="UNION"?(d&&g&&e.push(" & ("),l.type!=="discriminator"&&(i[l.type]?e.push(n+n+"|"+n+l.name+"<"+r.name+"Type."+l.name+"> "):e.push(n+n+"|"+n+l.name))):e.push(n+"  "+l.name+(r.kind==="MESSAGE"&&!l.isRequired?"?":"")+": "+u+";"),g=!1}}if(r.kind==="UNION"&&!i[r.name]?e[e.length-1]=e[e.length-1].substring(0,e[e.length-1].length)+";":r.kind==="UNION"?e[e.length-1]+=");":(e.push(n+"}"),e.push("")),h){let S=[];for(let v in c){let N=c[v],U=r.fields[N],O=U.type&&s.definitions[t[U.type]];if(O){let D=[];for(let V of O.fields){if(V.type==="discriminator")break;let R=`${r.name}${V.name}Discriminator`;if(D.push(R),V.type){let Jt=`${O.name}Type.${V.type}`;e.push(`type ${R} = { ${U.name}Type${U.isRequired?"":"?"}: ${Jt}; ${U.name}${U.isRequired?"":"?"}: ${V.type}; }`)}}D.length&&S.push(D)}}let _=S.map(v=>v.length>0?"( "+v.join(" | ")+" )":"").filter(v=>v.trim().length>0).join(" & ");if(_.length){let v="",N="";if(d){let U=0,O=[],D=[];for(let V in d){let R="U"+U++;D.push(R),O.push(R+` extends (${d[V]} | undefined) = undefined`)}v="<"+O.join(" , ")+">",N="<"+D.join(" , ")+">"}e.push(`export type ${r.name}${v} = Abstract${r.name}${N} & ${_};`)}else if(d){let v="",N="";if(d){let U=0,O=[],D=[];for(let V in d){let R="U"+U++;D.push(R),O.push(R+` extends (${d[V]} | undefined) = undefined`)}v="<"+O.join(" , ")+">",N="<"+D.join(" , ")+">"}e.push(`
            export interface ${r.name}${v} extends Abstract${r.name}${N} {}
          `)}else r.kind!=="UNION"&&e.push(`export interface ${r.name} extends Abstract${r.name} {};`)}}else r.kind!=="ENUM"&&r.kind!=="SMOL"&&w("Invalid definition kind "+y(r.kind),r.line,r.column)}for(var a=0;a<s.definitions.length;a++){var r=s.definitions[a];r.kind==="ENUM"||(r.kind==="STRUCT"||r.kind==="MESSAGE"||r.kind==="UNION")&&(r.kind==="UNION"&&r.fields[0].type!=="discriminator"?e.push(n+"export declare function  encode"+r.name+"(message: "+r.name+`, bb: ByteBuffer, type: ${r.name}Type): void;`):e.push(n+"export declare function  encode"+r.name+"(message: "+r.name+", bb: ByteBuffer): void;"),e.push(n+"export declare function decode"+r.name+"(buffer: ByteBuffer): "+r.name+";"))}return e.push(""),e.join(`
`)}function W(s,n,e){let t;switch(n.type){case"bool":t="bool";break;case"byte":t="uint8_t";break;case"int":t="int32_t";break;case"uint":t="uint32_t";break;case"float":t="float";break;case"string":t="kiwi::String";break;default:{let i=s[n.type];i||w("Invalid type "+y(n.type)+" for field "+y(n.name),n.line,n.column),t=i.name;break}}return e&&(t="kiwi::Array<"+t+">"),t}function re(s){return"_data_"+s.name}function Ie(s){return s>>5}function Be(s){return 1<<s%32>>>0}function se(s,n){return!n.isArray&&n.type in s&&s[n.type].kind!=="ENUM"}function Je(s){let n={},e=[];e.push('#include "kiwi.h"'),e.push(""),s.package!==null&&(e.push("namespace "+s.package+" {"),e.push(""),e.push("#ifndef INCLUDE_"+s.package.toUpperCase()+"_H"),e.push("#define INCLUDE_"+s.package.toUpperCase()+"_H"),e.push(""));for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];n[i.name]=i}e.push("class BinarySchema {"),e.push("public:"),e.push("  bool parse(kiwi::ByteBuffer &bb);"),e.push("  const kiwi::BinarySchema &underlyingSchema() const { return _schema; }");for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];i.kind==="MESSAGE"&&e.push("  bool skip"+i.name+"Field(kiwi::ByteBuffer &bb, uint32_t id) const;")}e.push(""),e.push("private:"),e.push("  kiwi::BinarySchema _schema;");for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];i.kind==="MESSAGE"&&e.push("  uint32_t _index"+i.name+" = 0;")}e.push("};"),e.push("");for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];if(i.kind==="ENUM"){e.push("enum class "+i.name+" : uint32_t {");for(let a=0;a<i.fields.length;a++){let r=i.fields[a];e.push("  "+r.name+" = "+r.value+",")}e.push("};"),e.push("")}else i.kind!=="STRUCT"&&i.kind!=="MESSAGE"&&w("Invalid definition kind "+y(i.kind),i.line,i.column)}for(let t=0;t<3;t++){let i=!1;if(t===2){s.package!==null&&e.push("#endif"),e.push("#ifdef IMPLEMENT_SCHEMA_H"),e.push(""),e.push("bool BinarySchema::parse(kiwi::ByteBuffer &bb) {"),e.push("  if (!_schema.parse(bb)) return false;");for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a];r.kind==="MESSAGE"&&e.push('  _schema.findDefinition("'+r.name+'", _index'+r.name+");")}e.push("  return true;"),e.push("}"),e.push("");for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a];r.kind==="MESSAGE"&&(e.push("bool BinarySchema::skip"+r.name+"Field(kiwi::ByteBuffer &bb, uint32_t id) const {"),e.push("  return _schema.skipField(bb, _index"+r.name+", id);"),e.push("}"),e.push(""))}}for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a];if(r.kind==="ENUM")continue;let o=r.fields;if(t===0)e.push("class "+r.name+";"),i=!0;else if(t===1){e.push("class "+r.name+" {"),e.push("public:"),e.push("  "+r.name+"() { (void)_flags; }"),e.push("");for(let p=0;p<o.length;p++){let f=o[p];if(f.isDeprecated)continue;let c=re(f),h=W(n,f,f.isArray),m=Ie(p),d=Be(p);se(n,f)?(e.push("  "+h+" *"+f.name+"();"),e.push("  const "+h+" *"+f.name+"() const;"),e.push("  void set_"+f.name+"("+h+" *value);")):f.isArray?(e.push("  "+h+" *"+f.name+"();"),e.push("  const "+h+" *"+f.name+"() const;"),e.push("  "+h+" &set_"+f.name+"(kiwi::MemoryPool &pool, uint32_t count);")):(e.push("  "+h+" *"+f.name+"();"),e.push("  const "+h+" *"+f.name+"() const;"),e.push("  void set_"+f.name+"(const "+h+" &value);")),e.push("")}e.push("  bool encode(kiwi::ByteBuffer &bb);"),e.push("  bool decode(kiwi::ByteBuffer &bb, kiwi::MemoryPool &pool, const BinarySchema *schema = nullptr);"),e.push(""),e.push("private:"),e.push("  uint32_t _flags["+(o.length+31>>5)+"] = {};");let l={bool:1,byte:1,int:4,uint:4,float:4},u=o.slice().sort(function(p,f){let c=!p.isArray&&l[p.type]||8,h=!f.isArray&&l[f.type]||8;return c!==h?h-c:o.indexOf(p)-o.indexOf(f)});for(let p=0;p<u.length;p++){let f=u[p];if(f.isDeprecated)continue;let c=re(f),h=W(n,f,f.isArray);se(n,f)?e.push("  "+h+" *"+c+" = {};"):e.push("  "+h+" "+c+" = {};")}e.push("};"),e.push("")}else{for(let l=0;l<o.length;l++){let u=o[l],p=re(u),f=W(n,u,u.isArray),c=Ie(l),h=Be(l);u.isDeprecated||(se(n,u)?(e.push(f+" *"+r.name+"::"+u.name+"() {"),e.push("  return "+p+";"),e.push("}"),e.push(""),e.push("const "+f+" *"+r.name+"::"+u.name+"() const {"),e.push("  return "+p+";"),e.push("}"),e.push(""),e.push("void "+r.name+"::set_"+u.name+"("+f+" *value) {"),e.push("  "+p+" = value;"),e.push("}"),e.push("")):u.isArray?(e.push(f+" *"+r.name+"::"+u.name+"() {"),e.push("  return _flags["+c+"] & "+h+" ? &"+p+" : nullptr;"),e.push("}"),e.push(""),e.push("const "+f+" *"+r.name+"::"+u.name+"() const {"),e.push("  return _flags["+c+"] & "+h+" ? &"+p+" : nullptr;"),e.push("}"),e.push(""),e.push(f+" &"+r.name+"::set_"+u.name+"(kiwi::MemoryPool &pool, uint32_t count) {"),e.push("  _flags["+c+"] |= "+h+"; return "+p+" = pool.array<"+W(n,u,!1)+">(count);"),e.push("}"),e.push("")):(e.push(f+" *"+r.name+"::"+u.name+"() {"),e.push("  return _flags["+c+"] & "+h+" ? &"+p+" : nullptr;"),e.push("}"),e.push(""),e.push("const "+f+" *"+r.name+"::"+u.name+"() const {"),e.push("  return _flags["+c+"] & "+h+" ? &"+p+" : nullptr;"),e.push("}"),e.push(""),e.push("void "+r.name+"::set_"+u.name+"(const "+f+" &value) {"),e.push("  _flags["+c+"] |= "+h+"; "+p+" = value;"),e.push("}"),e.push("")))}e.push("bool "+r.name+"::encode(kiwi::ByteBuffer &_bb) {");for(let l=0;l<o.length;l++){let u=o[l];if(u.isDeprecated)continue;let p=re(u),f=u.isArray?"_it":p,c=Ie(l),h=Be(l),m;switch(u.type){case"bool":{m="_bb.writeByte("+f+");";break}case"byte":{m="_bb.writeByte("+f+");";break}case"int":{m="_bb.writeVarInt("+f+");";break}case"uint":{m="_bb.writeVarUint("+f+");";break}case"float":{m="_bb.writeVarFloat("+f+");";break}case"string":{m="_bb.writeString("+f+".c_str());";break}default:{let g=n[u.type];g?g.kind==="ENUM"?m="_bb.writeVarUint(static_cast<uint32_t>("+f+"));":m="if (!"+f+(se(n,u)?"->":".")+"encode(_bb)) return false;":w("Invalid type "+y(u.type)+" for field "+y(u.name),u.line,u.column)}}let d="  ";r.kind==="STRUCT"?e.push("  if ("+u.name+"() == nullptr) return false;"):(e.push("  if ("+u.name+"() != nullptr) {"),d="    "),r.kind==="MESSAGE"&&e.push(d+"_bb.writeVarUint("+u.value+");"),u.isArray?(e.push(d+"_bb.writeVarUint("+p+".size());"),e.push(d+"for ("+W(n,u,!1)+" &_it : "+p+") "+m)):e.push(d+m),r.kind!=="STRUCT"&&e.push("  }")}r.kind==="MESSAGE"&&e.push("  _bb.writeVarUint(0);"),e.push("  return true;"),e.push("}"),e.push(""),e.push("bool "+r.name+"::decode(kiwi::ByteBuffer &_bb, kiwi::MemoryPool &_pool, const BinarySchema *_schema) {");for(let l=0;l<o.length;l++)if(o[l].isArray){e.push("  uint32_t _count;");break}r.kind==="MESSAGE"&&(e.push("  while (true) {"),e.push("    uint32_t _type;"),e.push("    if (!_bb.readVarUint(_type)) return false;"),e.push("    switch (_type) {"),e.push("      case 0:"),e.push("        return true;"));for(let l=0;l<o.length;l++){let u=o[l],p=re(u),f=u.isArray?"_it":p,c=se(n,u),h;switch(u.type){case"bool":{h="_bb.readByte("+f+")";break}case"byte":{h="_bb.readByte("+f+")";break}case"int":{h="_bb.readVarInt("+f+")";break}case"uint":{h="_bb.readVarUint("+f+")";break}case"float":{h="_bb.readVarFloat("+f+")";break}case"string":{h="_bb.readString("+f+", _pool)";break}default:{let g=n[u.type];g?g.kind==="ENUM"?h="_bb.readVarUint(reinterpret_cast<uint32_t &>("+f+"))":h=f+(c?"->":".")+"decode(_bb, _pool, _schema)":w("Invalid type "+y(u.type)+" for field "+y(u.name),u.line,u.column)}}let m=W(n,u,!1),d="  ";r.kind==="MESSAGE"&&(e.push("      case "+u.value+": {"),d="        "),u.isArray?(e.push(d+"if (!_bb.readVarUint(_count)) return false;"),u.isDeprecated?e.push(d+"for ("+m+" &_it : _pool.array<"+W(n,u,!1)+">(_count)) if (!"+h+") return false;"):e.push(d+"for ("+m+" &_it : set_"+u.name+"(_pool, _count)) if (!"+h+") return false;")):u.isDeprecated?(c?e.push(d+m+" *"+p+" = _pool.allocate<"+m+">();"):e.push(d+m+" "+p+" = {};"),e.push(d+"if (!"+h+") return false;")):(c&&e.push(d+p+" = _pool.allocate<"+m+">();"),e.push(d+"if (!"+h+") return false;"),c||e.push(d+"set_"+u.name+"("+p+");")),r.kind==="MESSAGE"&&(e.push("        break;"),e.push("      }"))}r.kind==="MESSAGE"?(e.push("      default: {"),e.push("        if (!_schema || !_schema->skip"+r.name+"Field(_bb, _type)) return false;"),e.push("        break;"),e.push("      }"),e.push("    }"),e.push("  }")):e.push("  return true;"),e.push("}"),e.push("")}}t===2?(e.push("#endif"),e.push("")):i&&e.push("")}return s.package!==null&&(e.push("}"),e.push("")),e.join(`
`)}function Ni(s,n,e){switch(n){case"bool":return{type:"bool ",name:e};case"byte":return{type:"uint8_t ",name:e};case"int":return{type:"int32_t ",name:e};case"uint":return{type:"uint32_t ",name:e};case"float":return{type:"float ",name:e};case"string":return{type:"const char *",name:e};default:{let t=s[n];return t.kind==="ENUM"?{type:t.name+" ",name:e}:null}}}function z(s,n,e,t){let i=[];for(let a=0;a<e.length;a++){let r=e[a],o=n+r.name;if(r.isArray&&!t)return null;let l=Ni(s,r.type,o);if(l!==null){i.push(l);continue}let u=s[r.type];if(u.kind!=="STRUCT")return null;let p=z(s,o+"_",u.fields,!1);if(p===null)return null;i.push.apply(i,p)}return i}function H(s){return s.type+s.name}function Ye(s){return s.name}function Xe(s){switch(s.type){case"bool ":case"uint8_t ":return"!bb.readByte("+s.name+")";case"int32_t ":return"!bb.readVarInt("+s.name+")";case"uint32_t ":return"!bb.readVarUint("+s.name+")";case"float ":return"!bb.readVarFloat("+s.name+")";case"const char *":return"!bb.readString("+s.name+")";default:return"!bb.readVarUint(reinterpret_cast<uint32_t &>("+s.name+"))"}}function He(s){switch(s.type){case"bool ":case"uint8_t ":return"_bb.writeByte("+s.name+")";case"int32_t ":return"_bb.writeVarInt("+s.name+")";case"uint32_t ":return"_bb.writeVarUint("+s.name+")";case"float ":return"_bb.writeVarFloat("+s.name+")";case"const char *":return"_bb.writeString("+s.name+")";default:return"_bb.writeVarUint(static_cast<uint32_t>("+s.name+"))"}}function Ze(s,n,e,t,i){let a=t.name;if(t.isArray){let o="_"+a+"_count";s.push(i+"uint32_t "+o+";"),s.push(i+"if (!bb.readVarUint("+o+")) return false;"),t.isDeprecated||s.push(i+"visitor.visit"+e.name+"_"+t.name+"_count("+o+");"),s.push(i+"while ("+o+"-- > 0) {"),i+="  ",a+="_element"}let r=z(n,"",[t],!0);if(r!==null){for(let o=0;o<r.length;o++)s.push(i+H(r[o])+";");s.push(i+"if ("+r.map(Xe).join(" || ")+") return false;"),t.isDeprecated||s.push(i+"visitor.visit"+e.name+"_"+a+"("+r.map(Ye).join(", ")+");")}else{t.isDeprecated||s.push(i+"visitor.visit"+e.name+"_"+a+"();");let o=n[t.type];s.push(i+"if (!parse"+o.name+"(bb, visitor)) return false;")}t.isArray&&s.push(i.slice(2)+"}")}function Qe(s){let n={},e=[];for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];n[i.name]=i}s.package!==null&&(e.push("#ifndef INCLUDE_"+s.package.toUpperCase()+"_H"),e.push("#define INCLUDE_"+s.package.toUpperCase()+"_H"),e.push("")),e.push('#include "kiwi.h"'),e.push(""),s.package!==null&&(e.push("namespace "+s.package+" {"),e.push(""));for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];if(i.kind==="ENUM"){e.push("enum class "+i.name+" : uint32_t {");for(let a=0;a<i.fields.length;a++){let r=i.fields[a];r.isDeprecated||e.push("  "+r.name+" = "+r.value+",")}e.push("};"),e.push("")}}for(let t=0;t<2;t++){let i=") = 0;";t===0?(e.push("class Visitor {"),e.push("public:")):(e.push("class Writer : public Visitor {"),e.push("private:"),e.push("  kiwi::ByteBuffer &_bb;"),e.push("public:"),e.push("  Writer(kiwi::ByteBuffer &bb) : _bb(bb) {}"),i=") override;");for(let a=0;a<s.definitions.length;a++){let r=s.definitions[a];if(r.kind==="STRUCT"){let o=z(n,"",r.fields,!1);if(o!==null){e.push("  virtual void visit"+r.name+"("+o.map(H).join(", ")+i);continue}}if(r.kind==="STRUCT"||r.kind==="MESSAGE"){e.push("  virtual void begin"+r.name+"("+i);for(let o=0;o<r.fields.length;o++){let l=r.fields[o];if(l.isDeprecated)continue;let u=l.name;l.isArray&&(e.push("  virtual void visit"+r.name+"_"+l.name+"_count(uint32_t size"+i),u+="_element");let p=z(n,"",[l],!0);p!==null?e.push("  virtual void visit"+r.name+"_"+u+"("+p.map(H).join(", ")+i):e.push("  virtual void visit"+r.name+"_"+u+"("+i)}e.push("  virtual void end"+r.name+"("+i)}}e.push("};"),e.push("")}for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];(i.kind==="STRUCT"||i.kind==="MESSAGE")&&e.push("bool parse"+i.name+"(kiwi::ByteBuffer &bb, Visitor &visitor);")}e.push(""),e.push("#ifdef IMPLEMENT_SCHEMA_H"),e.push("");for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];if(i.kind==="STRUCT"){let a=z(n,"",i.fields,!1);if(a!==null){e.push("bool parse"+i.name+"(kiwi::ByteBuffer &bb, Visitor &visitor) {");for(let r=0;r<a.length;r++)e.push("  "+H(a[r])+";");e.push("  if ("+a.map(Xe).join(" || ")+") return false;"),e.push("  visitor.visit"+i.name+"("+a.map(Ye).join(", ")+");"),e.push("  return true;"),e.push("}"),e.push("")}else{e.push("bool parse"+i.name+"(kiwi::ByteBuffer &bb, Visitor &visitor) {"),e.push("  visitor.begin"+i.name+"();");for(let r=0;r<i.fields.length;r++){let o=i.fields[r];Ze(e,n,i,o,"  ")}e.push("  visitor.end"+i.name+"();"),e.push("  return true;"),e.push("}"),e.push("")}}else if(i.kind==="MESSAGE"){e.push("bool parse"+i.name+"(kiwi::ByteBuffer &bb, Visitor &visitor) {"),e.push("  visitor.begin"+i.name+"();"),e.push("  while (true) {"),e.push("    uint32_t _type;"),e.push("    if (!bb.readVarUint(_type)) return false;"),e.push("    switch (_type) {"),e.push("      case 0: {"),e.push("        visitor.end"+i.name+"();"),e.push("        return true;"),e.push("      }");for(let a=0;a<i.fields.length;a++){let r=i.fields[a];e.push("      case "+r.value+": {"),Ze(e,n,i,r,"        "),e.push("        break;"),e.push("      }")}e.push("      default: return false;"),e.push("    }"),e.push("  }"),e.push("}"),e.push("")}}for(let t=0;t<s.definitions.length;t++){let i=s.definitions[t];if(i.kind==="STRUCT"){let a=z(n,"",i.fields,!1);if(a!==null){e.push("void Writer::visit"+i.name+"("+a.map(H).join(", ")+") {");for(let r=0;r<a.length;r++)e.push("  "+He(a[r])+";");e.push("}"),e.push("");continue}}if(i.kind==="STRUCT"||i.kind==="MESSAGE"){e.push("void Writer::begin"+i.name+"() {"),e.push("}"),e.push("");for(let a=0;a<i.fields.length;a++){let r=i.fields[a];if(r.isDeprecated)continue;let o=r.name;r.isArray&&(e.push("void Writer::visit"+i.name+"_"+r.name+"_count(uint32_t size) {"),i.kind==="MESSAGE"&&e.push("  _bb.writeVarUint("+r.value+");"),e.push("  _bb.writeVarUint(size);"),e.push("}"),e.push(""),o+="_element");let l=z(n,"",[r],!0);if(l!==null){e.push("void Writer::visit"+i.name+"_"+o+"("+l.map(H).join(", ")+") {"),i.kind==="MESSAGE"&&!r.isArray&&e.push("  _bb.writeVarUint("+r.value+");");for(let u=0;u<l.length;u++)e.push("  "+He(l[u])+";");e.push("}"),e.push("")}else e.push("void Writer::visit"+i.name+"_"+o+"() {"),i.kind==="MESSAGE"&&!r.isArray&&e.push("  _bb.writeVarUint("+r.value+");"),e.push("}"),e.push("")}e.push("void Writer::end"+i.name+"() {"),i.kind==="MESSAGE"&&e.push("  _bb.writeVarUint(0);"),e.push("}"),e.push("")}}return e.push("#endif"),e.push(""),s.package!==null&&(e.push("}"),e.push(""),e.push("#endif"),e.push("")),e.join(`
`)}function et(s){s[s.length-1]===""&&s.pop()}function ji(s,n){if(n.isArray)return"null";switch(n.type){case"bool":return"false";case"byte":case"int":case"uint":return"0";case"float":return"0.0";case"string":return"null"}let e=s[n.type];return e.kind==="ENUM"?e.fields.length>0?"."+e.fields[0].name:"0 as "+n.type:"null"}function tt(s){let n;switch(s.type){case"bool":n="bool";break;case"byte":case"int":case"uint":n="int";break;case"float":n="double";break;case"string":n="string";break;default:n=s.type;break}return s.isArray&&(n="List<"+n+">"),n}function it(s){let n={},e="",t=[];s.package!==null&&(t.push("namespace "+s.package+" {"),e+="  ");for(let i=0;i<s.definitions.length;i++){let a=s.definitions[i];n[a.name]=a}t.push(e+"class BinarySchema {"),t.push(e+"  var _schema = Kiwi.BinarySchema.new");for(let i=0;i<s.definitions.length;i++){let a=s.definitions[i];a.kind==="MESSAGE"&&t.push(e+"  var _index"+a.name+" = 0")}t.push(""),t.push(e+"  def parse(bytes Uint8Array) {"),t.push(e+"    _schema.parse(Kiwi.ByteBuffer.new(bytes))");for(let i=0;i<s.definitions.length;i++){let a=s.definitions[i];a.kind==="MESSAGE"&&t.push(e+"    _index"+a.name+' = _schema.findDefinition("'+a.name+'")')}t.push(e+"  }");for(let i=0;i<s.definitions.length;i++){let a=s.definitions[i];a.kind==="MESSAGE"&&(t.push(""),t.push(e+"  def skip"+a.name+"Field(bb Kiwi.ByteBuffer, id int) {"),t.push(e+"    _schema.skipField(bb, _index"+a.name+", id)"),t.push(e+"  }"))}t.push(e+"}"),t.push("");for(let i=0;i<s.definitions.length;i++){let a=s.definitions[i];switch(a.kind){case"ENUM":{let r={},o={};t.push(e+"enum "+a.name+" {");for(let l=0;l<a.fields.length;l++){let u=a.fields[l];r[u.name]=u.value,o[u.value]=u.name,t.push(e+"  "+u.name)}t.push(e+"}"),t.push(""),t.push(e+"namespace "+a.name+" {"),t.push(e+"  const _encode = "+JSON.stringify(r,null,2).replace(/"/g,"").replace(/\n/g,`
  `+e)),t.push(""),t.push(e+"  const _decode = "+JSON.stringify(o,null,2).replace(/"/g,"").replace(/\n/g,`
  `+e)),t.push(""),t.push(e+"  def encode(value "+a.name+") int {"),t.push(e+"    return _encode[value]"),t.push(e+"  }"),t.push(""),t.push(e+"  def decode(value int) "+a.name+" {"),t.push(e+"    if !(value in _decode) {"),t.push(e+"      Kiwi.DecodeError.throwInvalidEnumValue("+y(a.name)+")"),t.push(e+"    }"),t.push(e+"    return _decode[value]"),t.push(e+"  }"),t.push(e+"}"),t.push("");break}case"STRUCT":case"MESSAGE":{t.push(e+"class "+a.name+" {");for(let o=0;o<a.fields.length;o+=32)t.push(e+"  var _flags"+(o>>5)+" = 0");for(let o=0;o<a.fields.length;o++){let l=a.fields[o];l.isDeprecated||t.push(e+"  var _"+l.name+" "+tt(l)+" = "+ji(n,l))}t.push("");for(let o=0;o<a.fields.length;o++){let l=a.fields[o];if(l.isDeprecated)continue;let u=tt(l),p="_flags"+(o>>5),f=""+(1<<o%32>>>0);t.push(e+"  def has_"+l.name+" bool {"),t.push(e+"    return ("+p+" & "+f+") != 0"),t.push(e+"  }"),t.push(""),t.push(e+"  def "+l.name+" "+u+" {"),t.push(e+"    assert(has_"+l.name+")"),t.push(e+"    return _"+l.name),t.push(e+"  }"),t.push(""),t.push(e+"  def "+l.name+"=(value "+u+") {"),t.push(e+"    _"+l.name+" = value"),t.push(e+"    "+p+" |= "+f),t.push(e+"  }"),t.push("")}t.push(e+"  def encode(bb Kiwi.ByteBuffer) {");for(let o=0;o<a.fields.length;o++){let l=a.fields[o];if(l.isDeprecated)continue;let u="_"+l.name,p;switch(l.isArray&&(u="value"),l.type){case"bool":{p="bb.writeByte("+u+" as int)";break}case"byte":{p="bb.writeByte("+u+")";break}case"int":{p="bb.writeVarInt("+u+")";break}case"uint":{p="bb.writeVarUint("+u+")";break}case"float":{p="bb.writeVarFloat("+u+")";break}case"string":{p="bb.writeString("+u+")";break}default:{let c=n[l.type];c?c.kind==="ENUM"?p="bb.writeVarUint("+c.name+".encode("+u+"))":p=u+".encode(bb)":w("Invalid type "+y(l.type)+" for field "+y(l.name),l.line,l.column)}}let f=e+"    ";a.kind==="STRUCT"?t.push(f+"assert(has_"+l.name+")"):(t.push(f+"if has_"+l.name+" {"),f+="  "),a.kind==="MESSAGE"&&t.push(f+"bb.writeVarUint("+l.value+")"),l.isArray?(t.push(f+"bb.writeVarUint(_"+l.name+".count)"),t.push(f+"for value in _"+l.name+" {"),t.push(f+"  "+p),t.push(f+"}")):t.push(f+p),a.kind!=="STRUCT"&&t.push(e+"    }"),t.push("")}a.kind==="MESSAGE"?t.push(e+"    bb.writeVarUint(0)"):et(t),t.push(e+"  }"),t.push(""),t.push(e+"  def encode Uint8Array {"),t.push(e+"    var bb = Kiwi.ByteBuffer.new"),t.push(e+"    encode(bb)"),t.push(e+"    return bb.toUint8Array"),t.push(e+"  }"),t.push(e+"}"),t.push(""),t.push(e+"namespace "+a.name+" {"),t.push(e+"  def decode(bytes Uint8Array) "+a.name+" {"),t.push(e+"    return decode(Kiwi.ByteBuffer.new(bytes), null)"),t.push(e+"  }"),t.push(""),t.push(e+"  def decode(bytes Uint8Array, schema BinarySchema) "+a.name+" {"),t.push(e+"    return decode(Kiwi.ByteBuffer.new(bytes), schema)"),t.push(e+"  }"),t.push(""),t.push(e+"  def decode(bb Kiwi.ByteBuffer, schema BinarySchema) "+a.name+" {"),t.push(e+"    var self = new");for(let o=0;o<a.fields.length;o++)if(a.fields[o].isArray){t.push(e+"    var count = 0");break}let r=e+"  ";a.kind==="MESSAGE"&&(t.push(e+"    while true {"),t.push(e+"      var type = bb.readVarUint"),t.push(e+"      switch type {"),t.push(e+"        case 0 {"),t.push(e+"          break"),t.push(e+"        }"),t.push(""),r+="      ");for(let o=0;o<a.fields.length;o++){let l=a.fields[o],u;switch(l.type){case"bool":{u=l.isDeprecated?"bb.readByte":"bb.readByte as bool";break}case"byte":{u="bb.readByte";break}case"int":{u="bb.readVarInt";break}case"uint":{u="bb.readVarUint";break}case"float":{u="bb.readVarFloat";break}case"string":{u="bb.readString";break}default:{let p=n[l.type];p?p.kind==="ENUM"?u=p.name+".decode(bb.readVarUint)":u=p.name+".decode(bb, schema)":w("Invalid type "+y(l.type)+" for field "+y(l.name),l.line,l.column)}}a.kind==="MESSAGE"&&t.push(r+"case "+l.value+" {"),l.isArray?l.isDeprecated?(t.push(r+"  for i in 0..bb.readVarUint {"),t.push(r+"    "+u),t.push(r+"  }")):(t.push(r+"  count = bb.readVarUint"),t.push(r+"  self."+l.name+" = []"),t.push(r+"  for array = self._"+l.name+"; count != 0; count-- {"),t.push(r+"    array.append("+u+")"),t.push(r+"  }")):l.isDeprecated?t.push(r+"  "+u):t.push(r+"  self."+l.name+" = "+u),a.kind==="MESSAGE"&&(t.push(r+"}"),t.push(""))}a.kind==="MESSAGE"&&(t.push(e+"        default {"),t.push(e+"          if schema == null { Kiwi.DecodeError.throwInvalidMessage }"),t.push(e+"          else { schema.skip"+a.name+"Field(bb, type) }"),t.push(e+"        }"),t.push(e+"      }"),t.push(e+"    }")),t.push(e+"    return self"),t.push(e+"  }"),t.push(e+"}"),t.push("");break}default:{w("Invalid definition kind "+y(a.kind),a.line,a.column);break}}}return s.package!==null&&(et(t),t.push("}")),t.push(""),t.join(`
`)}var Me=["bool","byte","float","int","uint8","uint16","uint32","int8","int16","int32","float32","string","uint"],ue=["ENUM","STRUCT","MESSAGE","UNION","SMOL","ALIAS"];function nt(s){let n=s instanceof T?s:new T(s),e=n.readVarUint(),t=[];for(let i=0;i<e;i++){let a=n.readString(),r=n.readByte(),o=n.readVarUint(),l=[];for(let p=0;p<o;p++){let f=n.readString(),c=n.readVarInt(),h=!!(n.readByte()&1),m=!!(n.readByte()&1),d=n.readVarUint();l.push({name:f,line:0,column:0,type:ue[r]==="ENUM"||ue[r]==="SMOL"?null:c,isArray:h,isRequired:m,isDeprecated:!1,value:d})}let u=n.readString();t.push({name:a,line:0,column:0,kind:ue[r],fields:l,serializerPath:u})}for(let i=0;i<e;i++){let a=t[i].fields;for(let r=0;r<a.length;r++){let o=a[r],l=o.type;if(l!==null&&l<0){if(~l>=Me.length)throw new Error("Invalid type "+l);o.type=Me[~l]}else{if(l!==null&&l>=t.length)throw new Error("Invalid type "+l);o.type=l===null?null:t[l].name}}}return{package:null,definitions:t}}function rt(s){let n=new T,e=s.definitions,t={};n.writeVarUint(e.length);for(let i=0;i<e.length;i++)t[e[i].name]=i;for(let i=0;i<e.length;i++){let a=e[i];n.writeString(a.name),n.writeByte(ue.indexOf(a.kind)),n.writeVarUint(a.fields.length);for(let r=0;r<a.fields.length;r++){let o=a.fields[r],l=Me.indexOf(o.type);n.writeString(o.name),n.writeVarInt(l===-1?t[o.type]:~l),n.writeByte(o.isArray?1:0),n.writeByte(o.isRequired?1:0),n.writeVarUint(o.value)}n.writeString(a.serializerPath||"")}return n.toUint8Array()}function st(s){let n=s.definitions,e="",t=-1;s.package!==null&&(e+="package "+s.package+`;
`);for(let i=0;i<n.length;i++){let a=n[i];if((i>0||s.package!==null)&&(e+=`
`),a.kind==="UNION"){t=-1,e+=a.kind.toLowerCase()+" "+a.name+" = ";for(let r=0;r<a.fields.length;r++){let o=a.fields[r];if(o.value===0){t=r;continue}e+=o.name,r<a.fields.length-1&&(e+=" | ")}t>-1?(e+=` {
`,e+="  "+a.fields[t].name+`;
`,e+=`}
`):e+=`;
`}else if(a.kind==="ALIAS")e+=a.kind.toLowerCase()+" "+a.name+" = ",e+=a.fields[0].name,e+=`;
`;else{e+=a.kind.toLowerCase()+" "+a.name+` {
`;for(let r=0;r<a.fields.length;r++){let o=a.fields[r];e+="  ",a.kind!=="ENUM"&&(e+=o.type,o.isArray&&(e+="[]"),e+=" "),e+=o.name,a.kind!=="STRUCT"&&(e+=" = "+o.value),o.isDeprecated&&(e+=" [deprecated]"),e+=`;
`}e+=`}
`}}return e}function at(s){var n="",e=[];s.package!==null&&(e.push("namespace "+s.package+" {"),n+="  ");for(var t=0;t<s.definitions.length;t++){var i=s.definitions[t];if(i.kind==="ENUM"){if(e.push(n+"type "+i.name+" : string {"),e.push(n+"  @alwaysinline"),e.push(n+"  def toString string { return self as string }"),e.push(n+"}"),i.fields.length>0){e.push(n+"namespace "+i.name+" {");for(var a=0;a<i.fields.length;a++)e.push(n+"  @alwaysinline"),e.push(n+"  def "+i.fields[a].name+" "+i.name+" { return "+JSON.stringify(i.fields[a].name)+" as "+i.name+" }");e.push(n+"}")}e.push("")}}for(var t=0;t<s.definitions.length;t++){var i=s.definitions[t];if(i.kind==="STRUCT"||i.kind==="MESSAGE"){e.push(n+"@import"),e.push(n+"class "+i.name+" {");for(var a=0;a<i.fields.length;a++){var r=i.fields[a],o;if(!r.isDeprecated){switch(r.type){case"byte":case"uint":o="int";break;case"float":o="double";break;default:o=r.type;break}r.type==="byte"&&r.isArray?o="Uint8Array":r.isArray&&(o="List<"+o+">"),e.push(n+"  var "+r.name+" "+o),e.push(n+"  @alwaysinline"),e.push(n+"  def has_"+r.name+" bool { return self."+r.name+" != dynamic.void(0) }")}}e.push(n+"}"),e.push(""),e.push(n+"namespace "+i.name+" {"),e.push(n+"  @alwaysinline"),e.push(n+"  def new "+i.name+" { return {} as dynamic }"),e.push(n+"}"),e.push("")}else i.kind!=="ENUM"&&w("Invalid definition kind "+y(i.kind),i.line,i.column)}e.push(n+"@import"),e.push(n+"class Schema {");for(var t=0;t<s.definitions.length;t++){var i=s.definitions[t];i.kind==="ENUM"?e.push(n+"  const "+i.name+" dynamic"):(i.kind==="STRUCT"||i.kind==="MESSAGE")&&(e.push(n+"  def encode"+i.name+"(message "+i.name+") Uint8Array"),e.push(n+"  def decode"+i.name+"(buffer Uint8Array) "+i.name))}return e.push(n+"}"),s.package!==null&&e.push("}"),e.push(""),e.join(`
`)}var b=ve(Re());var I={bool:"bool",byte:"byte",float:"float32",int:"int",uint8:"uint8",uint16:"uint16",uint32:"uint32",int8:"int8",int16:"int16",float32:"float32",int32:"int32",lowp:"float32",string:"string",uint:"uint",alphanumeric:"string"};function Lt(s,n){return!n[s]||!n[s].fields.length?!1:n[s].fields[0].type==="discriminator"}function En(s,n,e){let t=[],i="  ";t.push(`func Decode${(0,b.pascalCase)(s.name)}(buf *buffer.Buffer) (${(0,b.pascalCase)(s.name)}, error) {`);let a=!1;t.push(`   result := ${(0,b.pascalCase)(s.name)}{}`);let r=t.length;t.push("");var o=!1;s.kind==="MESSAGE"&&(t.push("var fieldType uint;"),t.push("  for {"),t.push("    switch fieldType = buf.ReadVarUint(); fieldType {"),t.push("    case 0:"),t.push("      return result, nil;"),t.push(""),i="      ");for(let l=0;l<s.fields.length;l++){let u=s.fields[l],p,f=u.type;e[f]&&(f=e[f]);let c=I[f]||["SMOL","ENUM"].includes(n[f].kind);switch(f){case"bool":{p="buf.ReadBool()";break}case"uint8":case"byte":{p="buf.ReadByte()";break}case"int16":{p="buf.ReadInt16()";break}case"alphanumeric":{p="buf.ReadAlphanumeric()";break}case"int8":{p="buf.ReadInt8()";break}case"int32":{p="buf.ReadInt32()";break}case"int":{p="buf.ReadVarInt()";break}case"uint16":{p="buf.ReadUint16()";break}case"uint32":{p="buf.ReadUint32()";break}case"lowp":{p="buf.ReadLowPrecisionFloat()";break}case"uint":{p="buf.ReadVarUint()";break}case"float":{p="buf.ReadVarFloat()";break}case"float32":{p="buf.ReadFloat32()";break}case"string":{p="buf.ReadString()";break}default:{let h=n[f];h?h.kind==="ENUM"?p=(0,b.pascalCase)(h.name)+"(buf.ReadVarUint())":h.kind==="SMOL"?p=(0,b.pascalCase)(h.name)+"(buf.ReadByte())":p="Decode"+(0,b.pascalCase)(h.name)+"(buf)":w("Invalid type "+y(f)+" for field "+y(u.name),u.line,u.column)}}if(s.kind==="MESSAGE"&&t.push("    case "+u.value+":"),u.isArray)if(u.isDeprecated)f==="byte"?t.push(i+"buf.ReadByteArray();"):(t.push(i+"var length = buf.ReadVarUint();"),t.push(i+`for (length > 0) { ${p}; length++; }`));else switch(f){case"byte":{t.push(i+` result.${(0,b.pascalCase)(u.name)} = buf.ReadByteArray();`);break}case"uint16":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadUint16Array();`);break}case"uint32":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadUint32Array();`);break}case"int8":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadInt8Array();`);break}case"int16":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadInt16Array();`);break}case"int32":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadInt32Array();`);break}case"float32":{t.push(i+`result.${(0,b.pascalCase)(u.name)} = buf.ReadFloat32Array();`);break}default:{a||(t.splice(r,1,t[r],i+"var length uint;"),a=!0),t.push(i+"length = buf.ReadVarUint();");let h="";s.kind==="MESSAGE"?(h=`${(0,b.pascalCase)(u.name)}_a_${l}`,t.push(i+`${h} := make([]${I[f]?I[f]:(0,b.pascalCase)(f)}, length)`,i+`result.${(0,b.pascalCase)(u.name)} = &${h}`)):(h=`result.${(0,b.pascalCase)(u.name)}`,t.push(i+`${h} = make([]${I[f]?I[f]:(0,b.pascalCase)(f)}, length)`)),c?s.kind==="MESSAGE"?(t.push(i+`var ${(0,b.snakeCase)(u.name)}_${l} ${I[u.type]};`),t.push(i+"for j := uint(0); j < length; j++ {"),t.push(i+`   ${(0,b.snakeCase)(u.name)}_${l} = ${p}`),t.push(`     ${h}[j] = ${(0,b.snakeCase)(u.name)}_${l}`),t.push(i+"}")):t.push(i+`for j := uint(0); j < length; j++ { ${h}[j] = `+p+"; }"):s.kind==="MESSAGE"?(t.push(i+"var err error;"),t.push(i+`for j := uint(0); j < length; j++ {
`,i+` ${h}[j], err = ${p}`,i+"if (err != nil) {",i+"return result, err;",i+"}",i+"}")):(o||(t.splice(r,1,t[r],i+"var err error;"),o=!0),t.push(i+`for j := uint(0); j < length; j++ {
 ${h}[j], err = `+p+`;
 if (err != nil) {
 return result, err;
}
}`));break}}else f&&Lt(f,n)||f&&n[f]&&n[f].kind==="UNION"||(c?u.isDeprecated?t.push(i+p+";"):s.kind==="MESSAGE"?(t.push(i+`${(0,b.snakeCase)(u.name)}_${l} := ${p}`),t.push(i+`result.${(0,b.pascalCase)(u.name)} = &${(0,b.snakeCase)(u.name)}_${l}`)):t.push(i+`result.${(0,b.pascalCase)(u.name)} = ${p}`):(u.isDeprecated?t.push(i+p+";"):s.kind==="MESSAGE"?(t.push(i+`var ${(0,b.snakeCase)(u.name)}_${l} ${I[f]||n[f].name};`),t.push(i+`${(0,b.snakeCase)(u.name)}_${l}, err = ${p}`),t.push(i+`result.${(0,b.pascalCase)(u.name)} = &${(0,b.snakeCase)(u.name)}_${l}`)):t.push(i+`result.${(0,b.pascalCase)(u.name)}, err = ${p}`),o||(t.splice(r,1,t[r],"var err error;"),o=!0),t.push(i+"if err != nil {"),t.push(i+"  return result, err;"),t.push(i+"}")));s.kind==="MESSAGE"&&t.push("")}return s.kind==="MESSAGE"?(t.push("    default:"),t.push('      return result, errors.New("attempted to parse invalid message");'),t.push("    }"),t.push("  }")):s.kind==="UNION"?(t.push("    default:"),t.push('      return result, errors.New("attempted to parse invalid union");'),t.push("  }")):t.push("  return result, nil;"),t.push("}"),t.join(`
`)}function Un(s,n,e){let t=[];t.push(`func (i *${(0,b.pascalCase)(s.name)}) Encode(buf *buffer.Buffer) error {`);let i=!1,a=t.length,r=!1;for(let o=0;o<s.fields.length;o++){let l=s.fields[o],u,p=(0,b.pascalCase)(l.name);if(l.isDeprecated)continue;let f=l.type;e[f]&&(f=e[f]);let c=I[f]||["SMOL","ENUM"].includes(n[f].kind),h=l.isArray&&!["int16","uint16","uint32","int32","float32","byte"].includes(f)?s.kind==="MESSAGE"?`(*i.${p})[j]`:`i.${p}[j]`:`i.${p}`;switch(s.kind==="MESSAGE"&&l.isArray||s.kind==="MESSAGE"&&(h="*"+h),f){case"bool":{u=`buf.WriteBool(${h});`;break}case"byte":{u=`buf.WriteByte(${h});; // only used if not arr`;break}case"int":{u=`buf.WriteVarInt(${h});`;break}case"int8":{u=`buf.WriteInt8(${h});`;break}case"alphanumeric":{u=`buf.WriteAlphanumeric(${h});`;break}case"int16":{u=`buf.WriteInt16(${h});`;break}case"int32":{u=`buf.WriteInt32(${h});`;break}case"uint":{u=`buf.WriteVarUint(${h});`;break}case"lowp":{u=`buf.WriteLowPrecisionFloat(${h});`;break}case"uint8":{u=`buf.WriteByte(${h});`;break}case"uint16":{u=`buf.WriteUint16(${h});`;break}case"uint32":{u=`buf.WriteUint32(${h});`;break}case"float":{u=`buf.WriteVarFloat(${h});`;break}case"float32":{u=`buf.WriteFloat32(${h});`;break}case"string":{u=`buf.WriteString(${h});`;break}case"discriminator":throw"Discriminator not implmeneted";default:{let m=n[f];if(m)if(m.kind==="ENUM"&&!l.isArray)s.kind==="MESSAGE"?u=`buf.WriteVarUint(uint(*i.${p}))`:u=`buf.WriteVarUint(uint(i.${p}))`;else if(m.kind==="SMOL"&&!l.isArray)s.kind==="MESSAGE"?u=`buf.WriteByte(byte(&i.${p}))`:u=`buf.WriteByte(byte(i.${p}))`;else if(m.kind==="ENUM"&&l.isArray)s.kind==="MESSAGE"?u=`buf.WriteVarUint(uint(i.${p}[j]))`:u=`buf.WriteVarUint(uint(i.${p}[j]))`;else if(m.kind==="SMOL"&&l.isArray)s.kind==="MESSAGE"?u=`buf.WriteByte(byte(i.${p}[j]))`:u=`buf.WriteByte(byte(i.${p}[j]))`;else{if(m.kind==="UNION"&&Lt(m.name,n))throw"Unsupported";if(m.kind==="UNION")throw"Unsupported";l.isArray&&s.kind==="MESSAGE"?u=`(*i.${(0,b.pascalCase)(l.name)})[j].Encode(buf)`:l.isArray?u=`i.${(0,b.pascalCase)(l.name)}[j].Encode(buf)`:u=`i.${(0,b.pascalCase)(l.name)}.Encode(buf)`}else throw new Error("Invalid type "+y(f)+" for field "+y(l.name))}}if(t.push(""),f==="discriminator"?w("Unexpected discriminator",l.line,l.column):s.kind==="MESSAGE"&&t.push(`  if i.${p} != nil {`),s.kind==="MESSAGE"&&t.push(`    buf.WriteVarUint(${l.value});`),l.isArray){let m="   ";switch(f){case"byte":{s.kind==="MESSAGE"&&(h="*"+h),t.push(m+`buf.WriteByteArray(${h});`);break}case"uint16":{t.push(m+`buf.WriteUint16Array(${h});`);break}case"uint32":{t.push(m+`buf.WriteUint32Array(${h});`);break}case"int8":{t.push(m+`buf.WriteInt8Array(${h});`);break}case"int16":{t.push(m+`buf.WriteInt16Array(${h});`);break}case"int32":{t.push(m+`buf.WriteInt32Array(${h});`);break}case"float32":{t.push(m+`buf.WriteFloat32Array(${h});`);break}default:i||(t.splice(a,1,t[a],"    var n uint;"),i=!0),s.kind==="MESSAGE"?t.push(`    n = uint(len(*i.${p}))`):t.push(`    n = uint(len(i.${p}))`),t.push("    buf.WriteVarUint(n);"),t.push("    for j := uint(0); j < n; j++ {"),!I[f]&&["STRUCT","MESSAGE"].includes(n[f].kind)?(t.push(`      err := ${u}`),t.push(`      if err != nil {
return err;
}
`)):t.push(`      ${u}`),t.push("    }")}}else I[f]||["ENUM","SMOL"].includes(n[l.type].kind)?t.push("    "+u):(r||(t.splice(a,1,t[a],"var err error;"),r=!0),t.push("    err ="+u),t.push(`    if err != nil {
 return err
}
`));s.kind==="MESSAGE"&&t.push("   }")}return s.kind==="MESSAGE"&&t.push("  buf.WriteVarUint(0);"),t.push("  return nil"),t.push("}"),t.join(`
`)}function Tn(s){let n={},e={},t=s.package,i=[],a=[],r=[];i.push(`package ${s.package||"Schema"}`),i.push(""),i.push("import ("),i.push(' "errors"'),i.push(' "bytes"'),i.push(' "encoding/json"'),i.push(' "github.com/jarred-sumner/peechy/buffer"'),i.push(")");for(let o=0;o<s.definitions.length;o++){let l=s.definitions[o];n[l.name]=l,l.kind==="ALIAS"&&(e[l.name]=l.fields[0].name)}for(let o=0;o<s.definitions.length;o++){let l=s.definitions[o];if(l.kind!=="ALIAS")switch(l.kind){case"SMOL":case"ENUM":{let u={},p={};i.push(`type ${(0,b.pascalCase)(l.name)} ${l.kind==="SMOL"?"byte":"uint"}`),i.push(""),i.push("const (");let f=[],c=[],h=[];for(let m=0;m<l.fields.length;m++){let d=l.fields[m],g=`${(0,b.pascalCase)(l.name)}${(0,b.pascalCase)(d.name)}`;f.push(`  ${g} ${(0,b.pascalCase)(l.name)} = ${d.value}`),c.push(`  "${g}": ${g},`),h.push(`  ${g}: "${g}",`)}i.push(...f),i.push(""),i.push(")"),i.push(""),i.push(`var ${(0,b.pascalCase)(l.name)}ToString = map[${(0,b.pascalCase)(l.name)}]string{`),i.push(...h),i.push(""),i.push("}"),i.push(""),i.push(`var ${(0,b.pascalCase)(l.name)}ToID = map[string]${(0,b.pascalCase)(l.name)}{`),i.push(...c),i.push(""),i.push("}"),i.push(""),i.push(...`
// MarshalJSON marshals the enum as a quoted json string
func (s ${(0,b.pascalCase)(l.name)}) MarshalJSON() ([]byte, error) {
  buffer := bytes.NewBufferString(\`"\`)
  buffer.WriteString(${(0,b.pascalCase)(l.name)}ToString[s])
  buffer.WriteString(\`"\`)
  return buffer.Bytes(), nil
}

// UnmarshalJSON unmashals a quoted json string to the enum value
func (s *${(0,b.pascalCase)(l.name)}) UnmarshalJSON(b []byte) error {
  var j string
  err := json.Unmarshal(b, &j)
  if err != nil {
    return err
  }
  // Note that if the string cannot be found then it will be set to the zero value, 'Created' in this case.
  *s = ${(0,b.pascalCase)(l.name)}ToID[j]
  return nil
}

        `.split(`
`));break}case"UNION":{console.warn("Unions are unsupported.");break}case"STRUCT":case"MESSAGE":{i.push(`type ${l.name} struct {`);for(let u=0;u<l.fields.length;u++){let p=l.fields[u],f=I[p.type]||["SMOL","ENUM"].includes(n[p.type].kind),c="",h=I[p.type]||(0,b.pascalCase)(n[p.type].name),m=l.kind==="MESSAGE";p.isArray&&f||p.isArray?c=(m?"*":"")+"[]"+h:c=(m?"*":"")+h,i.push(`${(0,b.pascalCase)(p.name)}    ${c}     \`json:"${(0,b.camelCase)(p.name)}" redis:"${(0,b.camelCase)(p.name)}"\``)}i.push("}"),i.push(""),i.push(En(l,n,e)),i.push(""),i.push(Un(l,n,e)),i.push("");break}default:{w("Invalid definition kind "+y(l.kind),l.line,l.column);break}}}return i.push(""),i.join(`
`)}function Ft(s){return typeof s=="string"&&(s=L(s)),Tn(s)}var A=ve(Re());var Gt=`const std = @import("std");

pub const Reader = struct {
    const Self = @This();
    pub const ReadError = error{EOF};

    buf: []u8,
    remain: []u8,
    allocator: std.mem.Allocator,

    pub fn init(buf: []u8, allocator: std.mem.Allocator) Reader {
        return Reader{
            .buf = buf,
            .remain = buf,
            .allocator = allocator,
        };
    }

    pub fn read(this: *Self, count: usize) ![]u8 {
        const read_count = @minimum(count, this.remain.len);
        if (read_count < count) {
            return error.EOF;
        }

        var slice = this.remain[0..read_count];

        this.remain = this.remain[read_count..];

        return slice;
    }

    pub inline fn readAs(this: *Self, comptime T: type) !T {
        if (!std.meta.trait.hasUniqueRepresentation(T)) {
            @compileError(@typeName(T) ++ " must have unique representation.");
        }

        return std.mem.bytesAsValue(T, try this.read(@sizeOf(T)));
    }

    pub inline fn readByte(this: *Self) !u8 {
        return (try this.read(1))[0];
    }

    pub fn readEnum(this: *Self, comptime Enum: type) !Enum {
        const E = error{
            /// An integer was read, but it did not match any of the tags in the supplied enum.
            InvalidValue,
        };
        const type_info = @typeInfo(Enum).Enum;
        const tag = try this.readInt(type_info.tag_type);

        inline for (std.meta.fields(Enum)) |field| {
            if (tag == field.value) {
                return @field(Enum, field.name);
            }
        }

        return E.InvalidValue;
    }

    pub fn readArray(this: *Self, comptime T: type) ![]const T {
        const length = try this.readInt(u32);
        if (length == 0) {
            return &([_]T{});
        }

        switch (comptime T) {
            u8 => {
                return try this.read(length);
            },
            u16, u32, i8, i16, i32 => {
                return std.mem.readIntSliceNative(T, this.read(length * @sizeOf(T)));
            },
            [:0]const u8, []const u8 => {
                var i: u32 = 0;
                var array = try this.allocator.alloc(T, length);
                while (i < length) : (i += 1) {
                    array[i] = try this.readArray(u8);
                }
                return array;
            },
            else => {
                switch (comptime @typeInfo(T)) {
                    .Struct => |Struct| {
                        switch (Struct.layout) {
                            .Packed => {
                                const sizeof = @sizeOf(T);
                                var slice = try this.read(sizeof * length);
                                return std.mem.bytesAsSlice(T, slice);
                            },
                            else => {},
                        }
                    },
                    .Enum => |type_info| {
                        const enum_values = try this.read(length * @sizeOf(type_info.tag_type));
                        return @ptrCast([*]T, enum_values.ptr)[0..length];
                    },
                    else => {},
                }

                var i: u32 = 0;
                var array = try this.allocator.alloc(T, length);
                while (i < length) : (i += 1) {
                    array[i] = try this.readValue(T);
                }

                return array;
            },
        }
    }

    pub inline fn readByteArray(this: *Self) ![]u8 {
        const length = try this.readInt(u32);
        if (length == 0) {
            return &([_]u8{});
        }

        return try this.read(@as(usize, length));
    }

    pub inline fn readInt(this: *Self, comptime T: type) !T {
        var slice = try this.read(@sizeOf(T));

        return std.mem.readIntSliceNative(T, slice);
    }

    pub inline fn readBool(this: *Self) !bool {
        return (try this.readByte()) > 0;
    }

    pub inline fn readValue(this: *Self, comptime T: type) !T {
        switch (comptime T) {
            bool => {
                return try this.readBool();
            },
            u8 => {
                return try this.readByte();
            },
            [*:0]const u8, [:0]const u8, []const u8 => {
                return try this.readArray(u8);
            },

            []const [:0]const u8, []const [*:0]const u8, []const []const u8 => {
                return try this.readArray([]const u8);
            },
            []u8, [:0]u8, [*:0]u8 => {
                return try this.readArray([]u8);
            },
            u16, u32, i8, i16, i32 => {
                return std.mem.readIntSliceNative(T, try this.read(@sizeOf(T)));
            },
            else => {
                switch (comptime @typeInfo(T)) {
                    .Struct => |Struct| {
                        switch (Struct.layout) {
                            .Packed => {
                                const sizeof = @sizeOf(T);
                                var slice = try this.read(sizeof);
                                return @ptrCast(*align(1) T, slice[0..sizeof]).*;
                            },
                            else => {},
                        }
                    },
                    .Enum => {
                        return try this.readEnum(T);
                    },
                    else => {},
                }

                return try T.decode(this);
            },
        }

        @compileError("Invalid type passed to readValue");
    }
};

pub fn Writer(comptime WritableStream: type) type {
    return struct {
        const Self = @This();
        writable: WritableStream,

        pub fn init(writable: WritableStream) Self {
            return Self{ .writable = writable };
        }

        pub inline fn write(this: *Self, bytes: anytype) !void {
            _ = try this.writable.write(bytes);
        }

        pub inline fn writeByte(this: *Self, byte: u8) !void {
            _ = try this.writable.write(&[1]u8{byte});
        }

        pub inline fn writeInt(this: *Self, int: anytype) !void {
            try this.write(std.mem.asBytes(&int));
        }

        pub inline fn writeFieldID(this: *Self, comptime id: comptime_int) !void {
            try this.writeByte(id);
        }

        pub inline fn writeEnum(this: *Self, val: anytype) !void {
            try this.writeInt(@enumToInt(val));
        }

        pub fn writeValue(this: *Self, comptime SliceType: type, slice: SliceType) !void {
            switch (SliceType) {
                []u16,
                []u32,
                []i16,
                []i32,
                []i8,
                []const u16,
                []const u32,
                []const i16,
                []const i32,
                []const i8,
                [:0]u16,
                [:0]u32,
                [:0]i16,
                [:0]i32,
                [:0]i8,
                [:0]const u16,
                [:0]const u32,
                [:0]const i16,
                [:0]const i32,
                [:0]const i8,
                [*:0]u16,
                [*:0]u32,
                [*:0]i16,
                [*:0]i32,
                [*:0]i8,
                [*:0]const u16,
                [*:0]const u32,
                [*:0]const i16,
                [*:0]const i32,
                [*:0]const i8,
                => {
                    try this.writeArray(SliceType, slice);
                },

                []u8,
                []const u8,
                [:0]u8,
                [:0]const u8,
                [*:0]u8,
                [*:0]const u8,
                => {
                    try this.writeArray(u8, slice);
                },

                u8 => {
                    try this.write(slice);
                },
                u16, u32, i16, i32, i8 => {
                    try this.write(std.mem.asBytes(slice));
                },

                else => {
                    try slice.encode(this);
                },
            }
        }

        pub fn writeArray(this: *Self, comptime T: type, slice: anytype) !void {
            try this.writeInt(@truncate(u32, slice.len));

            switch (T) {
                u8 => {
                    try this.write(slice);
                },
                u16, u32, i16, i32, i8 => {
                    try this.write(std.mem.asBytes(slice));
                },
                [:0]u8,
                []u8,
                []u16,
                []u32,
                []i16,
                []i32,
                []i8,
                []const u8,
                [:0]const u8,
                []const u16,
                []const u32,
                []const i16,
                []const i32,
                []const i8,
                [:0]u16,
                [:0]u32,
                [:0]i16,
                [:0]i32,
                [:0]i8,
                [:0]const u16,
                [:0]const u32,
                [:0]const i16,
                [:0]const i32,
                [:0]const i8,
                [*:0]u16,
                [*:0]u32,
                [*:0]i16,
                [*:0]i32,
                [*:0]i8,
                [*:0]const u16,
                [*:0]const u32,
                [*:0]const i16,
                [*:0]const i32,
                [*:0]const i8,
                => {
                    for (slice) |num_slice| {
                        try this.writeArray(std.meta.Child(@TypeOf(num_slice)), num_slice);
                    }
                },
                else => {
                    for (slice) |val| {
                        try val.encode(this);
                    }
                },
            }
        }

        pub inline fn endMessage(this: *Self) !void {
            try this.writeByte(0);
        }
    };
}

pub const ByteWriter = Writer(*std.io.FixedBufferStream([]u8));
pub const FileWriter = Writer(std.fs.File);

// --- DIVIDING LINE ----
`;var q={bool:"bool",byte:"u8",float:"f32",int:"i32",uint8:"u8",uint16:"u16",uint32:"u32",int8:"i8",int16:"i16",float32:"f32",int32:"i32",lowp:"f32",string:"[]const u8",uint:"u32",alphanumeric:"[]const u8"},xn={bool:"bool",byte:"u8",float:"f32",int:"i32",uint8:"u8",uint16:"u16",uint32:"u32",int8:"i8",int16:"i16",float32:"f32",int32:"i32",lowp:"f32",uint:"u32"};function In(s,n,e){let t=[],i="  ";i="  ",t.push(`pub fn decode(reader: anytype) anyerror!${(0,A.pascalCase)(s.name)} {`,`${i}var this = std.mem.zeroes(${(0,A.pascalCase)(s.name)});`);let a=!1,r=t.length;t.push("");var o=!1;s.kind==="MESSAGE"&&(t.push("  while(true) {"),t.push("    switch (try reader.readByte()) {"),t.push("      0 => { return this; },"),t.push(""),i="      ");var l=!1,u=!1;for(let p=0;p<s.fields.length;p++){let f=s.fields[p],c,h=f.type;e[h]&&(h=e[h]);let m=(0,A.snakeCase)(f.name),d=q[h]||(0,A.pascalCase)(h);s.kind==="MESSAGE"&&(t.push(`${i}${p+1} => {`),i+="  "),f.isArray?t.push(`${i}this.${m} = try reader.readArray(${d}); `):t.push(`${i}this.${m} = try reader.readValue(${d}); `),s.kind==="MESSAGE"&&(i="      ",t.push("},"))}return s.kind==="MESSAGE"?(t.push(`${i}else => {`),t.push(`${i}return error.InvalidMessage;`),t.push(`${i}},`),t.push(`${i}}`),t.push(`${i}}`),t.push("unreachable;")):t.push(`${i} return this;`),t.push("}"),t.join(`
`)}function Bn(s,n,e){let t=[];t.push("pub fn encode(this: *const @This(), writer: anytype) anyerror!void {");let i=!1,a=t.length,r=!1,o={byte:"u8",float:"f32",int:"i32",uint8:"u8",uint16:"u16",uint32:"u32",int8:"i8",int16:"i16",float32:"f32",int32:"i32",lowp:"f32",uint:"u32"};for(let p=0;p<s.fields.length;p++){let f=s.fields[p],c;var l=(0,A.snakeCase)(f.name);if(f.isDeprecated)continue;let h=f.type;e[h]&&(h=e[h]);var u=(0,A.snakeCase)(f.name);let m=q[h]||(0,A.pascalCase)(h);if(s.kind==="MESSAGE"?(t.push(`if (this.${u}) |${u}| {`),t.push(`  try writer.writeFieldID(${p+1});`)):u=`this.${u}`,f.isArray)t.push(`   try writer.writeArray(${m}, ${u});`);else if(o[h])t.push(`   try writer.writeInt(${u});`);else if(h==="bool")t.push(`   try writer.writeInt(@as(u8, @boolToInt(${u})));`);else if(f.type==="string"||f.type==="alphanumeric")t.push(`   try writer.writeValue(@TypeOf(${u}), ${u});`);else switch(n[h].kind){case"SMOL":case"ENUM":{t.push(`   try writer.writeEnum(${u});`);break}default:{t.push(`   try writer.writeValue(@TypeOf(${u}), ${u});`);break}}s.kind==="MESSAGE"&&t.push("}")}return s.kind==="MESSAGE"&&t.push("try writer.endMessage();"),t.push("}"),t.join(`
`)}function Mn(s){let n={},e={},t=s.package,i=[],a=[],r=[];i.push("");let o=Gt.split("// --- DIVIDING LINE ----");i.push(o[0]),i.push(""),i.push(""),i.push(`pub const ${s.package||"Schema"} = struct { `),i.push("");for(let l=0;l<s.definitions.length;l++){let u=s.definitions[l];n[u.name]=u,u.kind==="ALIAS"&&(e[u.name]=u.fields[0].name)}for(let l=0;l<s.definitions.length;l++){let u=s.definitions[l];if(u.kind!=="ALIAS")switch(u.kind){case"SMOL":case"ENUM":{let p={},f={};i.push(`pub const ${(0,A.pascalCase)(u.name)} = enum(${u.kind==="SMOL"?q.byte:q.uint}) {`),i.push(""),i.push("_none,");let c=[],h=[],m=[];for(let d=0;d<u.fields.length;d++){let g=u.fields[d];c.push(`  /// ${g.name}`),c.push(`  ${(0,A.snakeCase)(g.name)},`),c.push("")}i.push(...c),i.push("_,"),i.push(...`
                pub fn jsonStringify(self: *const @This(), opts: anytype, o: anytype) !void {
                    return try std.json.stringify(@tagName(self), opts, o);
                }

                `.split(`
`)),i.push("};"),i.push("");break}case"UNION":{console.warn("Unions are unsupported in Zig.");break}case"STRUCT":case"MESSAGE":{Nn(s,u)?i.push(`pub const ${(0,A.pascalCase)(u.name)} = packed struct {`):i.push(`pub const ${(0,A.pascalCase)(u.name)} = struct {`);for(let p=0;p<u.fields.length;p++){let f=u.fields[p],c=q[f.type]||["SMOL","ENUM"].includes(n[f.type].kind),h="",m=q[f.type]||(0,A.pascalCase)(n[f.type].name),d=u.kind==="MESSAGE";f.isArray?h="[]const "+m:h=(d?"?":"")+m,i.push(`/// ${f.name}`),d&&!f.isArray?i.push(`${(0,A.snakeCase)(f.name)}: ${h} = null,`):!f.isArray&&f.type!=="string"&&f.type!=="alphanumeric"&&q[f.type]?f.type==="bool"?i.push(`${(0,A.snakeCase)(f.name)}: ${h} = false,`):i.push(`${(0,A.snakeCase)(f.name)}: ${h} = 0,`):i.push(`${(0,A.snakeCase)(f.name)}: ${h},`),i.push("")}i.push(""),i.push(In(u,n,e)),i.push(""),i.push(Bn(u,n,e)),i.push(""),i.push("};"),i.push("");break}default:{w("Invalid definition kind "+y(u.kind),u.line,u.column);break}}}return i.push(""),i.push("};"),i.push(o[1]),i.join(`
`)}function qt(s){return typeof s=="string"&&(s=L(s)),Mn(s)}function Wt(s,n){if(n.kind==="SMOL"||n.kind==="ENUM")return!0;if(n.kind!=="STRUCT")return!1;for(let e of n.fields){if(e.isArray)return!1;if(xn[e.type])continue;if(q[e.type])return!1;let t=s.definitions[e.type];if(!t||!Wt(s,t))return!1}return!0}function Nn(s,n){return n.kind==="STRUCT"&&Wt(s,n)}var zt=["","Usage: peechy [OPTIONS]","","Options:","","  --help                Print this message.","  --schema [PATH]       The schema file to use.","  --js [PATH]           Generate JavaScript code.","  --go [PATH]           Generate Go code.","  --zig [PATH]          Generate Zig code.","  --esm [PATH]          Generate JavaScript code as a ECMAScript module.","  --js-allocator [PATH] Allow passing an allocator to import in the code.","  --ts [PATH]           Generate TypeScript type definitions.","  --text [PATH]         Encode the schema as text.","  --binary [PATH]       Encode the schema as a binary blob.","  --root-type [NAME]    Set the root type for JSON.","  --to-json [PATH]      Convert a binary file to JSON.","  --from-json [PATH]    Convert a JSON file to binary.","","Examples:","","  peechy --schema test.kiwi --js test.js --ts test.ts","  peechy --schema test.kiwi --binary test.bkiwi","  peechy --schema test.kiwi --root-type Test --from-json buffer.json","  peechy --schema test.kiwi --root-type Test --to-json buffer.bin",""].join(`
`);function C(s,n){try{if(P.readFileSync(s,"utf8")===n)return}catch{}P.writeFileSync(s,n)}function Le(s,n){try{if(P.readFileSync(s).equals(n))return}catch{}P.writeFileSync(s,n)}function Kt(s){let n={"--schema":null,"--js":null,"--go":null,"--esm":null,"--ts":null,"--zig":null,"--cpp":null,"--callback-cpp":null,"--js-allocator":null,"--skew":null,"--skew-types":null,"--binary":null,"--text":null,"--root-type":null,"--to-json":null,"--from-json":null};for(let l=0;l<s.length;l++){let u=s[l];if(u==="-h"||u==="--help"||u[0]!=="-")return console.log(zt),1;if(u in n){if(l+1===s.length)throw new Error("Missing value for "+JSON.stringify(u)+' (use "--help" for usage)');n[u]=s[++l]}else throw new Error("Unknown flag "+JSON.stringify(u)+' (use "--help" for usage)')}if(n["--schema"]===null)return console.log(zt),1;let e=P.readFileSync(n["--schema"]),i=Array.prototype.indexOf.call(e,0)===-1?e.toString():new Uint8Array(e);try{var a=typeof i=="string"?L(i):nt(new T(i)),r=xe(a)}catch(l){throw(l&&l.message&&"line"in l||"column"in l)&&(l.message=n["--schema"]+":"+l.line+":"+l.column+": error: "+l.message,typeof i=="string"&&(l.message+=`
`+i.split(`
`)[l.line-1]+`
`+new Array(l.column).join(" ")+"^")),l}let o=n["--root-type"];if(o!==null&&!("encode"+o in r&&"decode"+o in r))throw new Error("Invalid root type: "+JSON.stringify(o));if(n["--js"]!==null&&C(n["--js"],$e(a,!!n["--js-allocator"])),n["--esm"]!==null){let l=n["--js-allocator"];C(n["--esm"],xe(a,!0,l))}if(n["--ts"]!==null&&C(n["--ts"],Ke(a)),n["--go"]!==null&&C(n["--go"],Ft(a)),n["--zig"]!==null&&C(n["--zig"],qt(a)),n["--cpp"]!==null&&C(n["--cpp"],Je(a)),n["--callback-cpp"]!==null&&C(n["--callback-cpp"],Qe(a)),n["--skew"]!==null&&C(n["--skew"],it(a)),n["--skew-types"]!==null&&C(n["--skew-types"],at(a)),n["--binary"]!==null&&Le(n["--binary"],Buffer.from(rt(a))),n["--text"]!==null&&Le(n["--text"],Buffer.from(st(a))),n["--to-json"]!==null){if(o===null)throw new Error("Missing flag --root-type when using --to-json");C(n["--to-json"]+".json",JSON.stringify(r["decode"+o](new Uint8Array(P.readFileSync(n["--to-json"]))),null,2)+`
`)}if(n["--from-json"]!==null){if(o===null)throw new Error("Missing flag --root-type when using --from-json");Le(n["--from-json"]+".bin",Buffer.from(r["encode"+o](JSON.parse(P.readFileSync(n["--from-json"],"utf8")))))}return 0}require.main===module&&process.exit(Kt(process.argv.slice(2)));0&&(module.exports={main});
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
